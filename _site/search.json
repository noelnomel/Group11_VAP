[
  {
    "objectID": "EDA/Data_Preparation.html",
    "href": "EDA/Data_Preparation.html",
    "title": "Data Preparation",
    "section": "",
    "text": "This page will explain in detail how we extract the data from the Meteorological Service Singapore (MSS) website and how we clean the data for our subsequent analysis."
  },
  {
    "objectID": "EDA/Data_Preparation.html#installing-r-packages",
    "href": "EDA/Data_Preparation.html#installing-r-packages",
    "title": "Data Preparation",
    "section": "3.1 Installing R packages",
    "text": "3.1 Installing R packages\nThe code below uses p_load() of the Pacman package to check if all the required packages are installed on the laptop. If they are, then they will be launched into the R environment.\n\n\n\nPackage\nDescription\n\n\ntidyverse\nA collection of core packages designed for data science used extensively for data preparation and wrangling.\n\n\nlubridate\nFor manipulating date-times.\n\n\njanitor\nFor quick formatting of data frame columns.\n\n\nfs\nFor retrieving a list of file names in our directory for import into R\n\n\n\n\npacman::p_load(readr, tidyverse, forecast, janitor, fs)"
  },
  {
    "objectID": "EDA/Data_Preparation.html#importing-data",
    "href": "EDA/Data_Preparation.html#importing-data",
    "title": "Data Preparation",
    "section": "3.2 Importing data",
    "text": "3.2 Importing data\nLet’s read all the 5552 CSV files downloaded for the 18 weather stations that have records from the year 1980 onwards.\n\nlocale argument in read_csv() is to specify the encoding as Latin-1, as some of the headers contain special characters, like the degree symbol (°). The Latin-1 encoding ensures R can read and process such special characters.\ncol_types argument imports all columns as character data type.\nclean_names() of the janitor package converts into snake case and transliterates special characters such as the degree symbol (°) to ASCII.\n\n\n #| eval: False\nfilenames &lt;- fs::dir_ls(\"data/raw_data/\") \n\n# Read all files and clean the column names\ndata &lt;- filenames %&gt;%\n    map_df(~ read_csv(.x, \n                      locale = locale(encoding = \"latin1\"),\n                      col_types = cols(.default = \"character\")\n                      ) %&gt;% \n             janitor::clean_names()\n    ) \n\nglimpse(data)\n\nRows: 168,439\nColumns: 16\n$ station                     &lt;chr&gt; \"Paya Lebar\", \"Paya Lebar\", \"Paya Lebar\", …\n$ year                        &lt;chr&gt; \"1981\", \"1981\", \"1981\", \"1981\", \"1981\", \"1…\n$ month                       &lt;chr&gt; \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1…\n$ day                         &lt;chr&gt; \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9…\n$ daily_rainfall_total_mm     &lt;chr&gt; \"0\", \"0.4\", \"0\", \"3.3\", \"0\", \"0.8\", \"4.6\",…\n$ highest_30_min_rainfall_mm  &lt;chr&gt; \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\…\n$ highest_60_min_rainfall_mm  &lt;chr&gt; \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\…\n$ highest_120_min_rainfall_mm &lt;chr&gt; \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\…\n$ mean_temperature_c          &lt;chr&gt; \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\…\n$ maximum_temperature_c       &lt;chr&gt; \"30.8\", \"29.5\", \"30.4\", \"30.7\", \"27.2\", \"3…\n$ minimum_temperature_c       &lt;chr&gt; \"22.7\", \"23.1\", \"23.5\", \"23.5\", \"23.2\", \"2…\n$ mean_wind_speed_km_h        &lt;chr&gt; \"14.3\", \"9.4\", \"11.7\", \"9.4\", \"9.1\", \"9.6\"…\n$ max_wind_speed_km_h         &lt;chr&gt; \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\…\n$ mean_temperature_a_c        &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ maximum_temperature_a_c     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ minimum_temperature_a_c     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n\n\n\n\n\n\n\n\nNote\n\n\n\nAll the 18 weather stations have a total of 168,439 records.\nThe data shows that there are two sets of variables for mean, maximum, and minimum temperature records:\n\nmean_temperature_c, maximum_temperature_c, and minimum_temperature_c\nmean_temperature_a_c, maximum_temperature_a_c, and minimum_temperature_a_c\n\nSome year’s data are in the first set of variables and others are in the second set of variables. This might happen during clean_names() where there is a minor difference in the column names from different files.\n\n\nAs it will be meaningful to also analyse weather data by regions in Singapore. Hence, we also searched for each weather station’s region on public websites like the HDB website and data.gov.sg. Let’s import the region information now.\n\n #| eval: False\nregion &lt;- read_csv(\"data/Region.csv\") \nglimpse(region)\n\nRows: 18\nColumns: 2\n$ Station &lt;chr&gt; \"Admiralty\", \"Ang Mo Kio\", \"Boon Lay (East)\", \"Changi\", \"Choa …\n$ Region  &lt;chr&gt; \"North\", \"North-East\", \"West\", \"East\", \"West\", \"West\", \"East\",…"
  },
  {
    "objectID": "EDA/Data_Preparation.html#data-wrangling",
    "href": "EDA/Data_Preparation.html#data-wrangling",
    "title": "Data Preparation",
    "section": "3.3 Data Wrangling",
    "text": "3.3 Data Wrangling\n\n3.3.1 Remove extra columns\nLet’s use coalesce() function to copy the values from the second set of temperature values to the first set and then deselect the second set of columns. We are also not focusing on the wind speed variables, hence we will deselect the 2 variables on wind speed.\n\n #| eval: False\ndata$mean_temperature_c &lt;- coalesce(data$mean_temperature_c, \n                                    data$mean_temperature_a_c) \ndata$maximum_temperature_c &lt;- coalesce(data$maximum_temperature_c, \n                                       data$maximum_temperature_a_c)\ndata$minimum_temperature_c &lt;- coalesce(data$minimum_temperature_c,                                                                data$minimum_temperature_a_c)\n\ndata %&gt;% \n  select(-c(mean_temperature_a_c, \n            maximum_temperature_a_c, \n            minimum_temperature_a_c, \n            mean_wind_speed_km_h, \n            max_wind_speed_km_h))\n\n# A tibble: 168,439 × 11\n   station    year  month day   daily_rainfall_total_mm highest_30_min_rainfal…¹\n   &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;                   &lt;chr&gt;                   \n 1 Paya Lebar 1981  1     1     0                       \"\\u0097\"                \n 2 Paya Lebar 1981  1     2     0.4                     \"\\u0097\"                \n 3 Paya Lebar 1981  1     3     0                       \"\\u0097\"                \n 4 Paya Lebar 1981  1     4     3.3                     \"\\u0097\"                \n 5 Paya Lebar 1981  1     5     0                       \"\\u0097\"                \n 6 Paya Lebar 1981  1     6     0.8                     \"\\u0097\"                \n 7 Paya Lebar 1981  1     7     4.6                     \"\\u0097\"                \n 8 Paya Lebar 1981  1     8     2.3                     \"\\u0097\"                \n 9 Paya Lebar 1981  1     9     0.3                     \"\\u0097\"                \n10 Paya Lebar 1981  1     10    0                       \"\\u0097\"                \n# ℹ 168,429 more rows\n# ℹ abbreviated name: ¹​highest_30_min_rainfall_mm\n# ℹ 5 more variables: highest_60_min_rainfall_mm &lt;chr&gt;,\n#   highest_120_min_rainfall_mm &lt;chr&gt;, mean_temperature_c &lt;chr&gt;,\n#   maximum_temperature_c &lt;chr&gt;, minimum_temperature_c &lt;chr&gt;\n\nglimpse(data)\n\nRows: 168,439\nColumns: 16\n$ station                     &lt;chr&gt; \"Paya Lebar\", \"Paya Lebar\", \"Paya Lebar\", …\n$ year                        &lt;chr&gt; \"1981\", \"1981\", \"1981\", \"1981\", \"1981\", \"1…\n$ month                       &lt;chr&gt; \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1…\n$ day                         &lt;chr&gt; \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9…\n$ daily_rainfall_total_mm     &lt;chr&gt; \"0\", \"0.4\", \"0\", \"3.3\", \"0\", \"0.8\", \"4.6\",…\n$ highest_30_min_rainfall_mm  &lt;chr&gt; \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\…\n$ highest_60_min_rainfall_mm  &lt;chr&gt; \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\…\n$ highest_120_min_rainfall_mm &lt;chr&gt; \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\…\n$ mean_temperature_c          &lt;chr&gt; \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\…\n$ maximum_temperature_c       &lt;chr&gt; \"30.8\", \"29.5\", \"30.4\", \"30.7\", \"27.2\", \"3…\n$ minimum_temperature_c       &lt;chr&gt; \"22.7\", \"23.1\", \"23.5\", \"23.5\", \"23.2\", \"2…\n$ mean_wind_speed_km_h        &lt;chr&gt; \"14.3\", \"9.4\", \"11.7\", \"9.4\", \"9.1\", \"9.6\"…\n$ max_wind_speed_km_h         &lt;chr&gt; \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\…\n$ mean_temperature_a_c        &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ maximum_temperature_a_c     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ minimum_temperature_a_c     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n\n\n\n\n3.3.2 Remove weird characters\nThere are some weird characters (‘097’) in the data frame. Let’s replace them with NA.\n\n #| eval: False\ndata &lt;- data %&gt;% \n  mutate_all(~ ifelse(. == \"\\u0097\", NA, .))\nglimpse(data)\n\nRows: 168,439\nColumns: 16\n$ station                     &lt;chr&gt; \"Paya Lebar\", \"Paya Lebar\", \"Paya Lebar\", …\n$ year                        &lt;chr&gt; \"1981\", \"1981\", \"1981\", \"1981\", \"1981\", \"1…\n$ month                       &lt;chr&gt; \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1…\n$ day                         &lt;chr&gt; \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9…\n$ daily_rainfall_total_mm     &lt;chr&gt; \"0\", \"0.4\", \"0\", \"3.3\", \"0\", \"0.8\", \"4.6\",…\n$ highest_30_min_rainfall_mm  &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ highest_60_min_rainfall_mm  &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ highest_120_min_rainfall_mm &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ mean_temperature_c          &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ maximum_temperature_c       &lt;chr&gt; \"30.8\", \"29.5\", \"30.4\", \"30.7\", \"27.2\", \"3…\n$ minimum_temperature_c       &lt;chr&gt; \"22.7\", \"23.1\", \"23.5\", \"23.5\", \"23.2\", \"2…\n$ mean_wind_speed_km_h        &lt;chr&gt; \"14.3\", \"9.4\", \"11.7\", \"9.4\", \"9.1\", \"9.6\"…\n$ max_wind_speed_km_h         &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ mean_temperature_a_c        &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ maximum_temperature_a_c     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ minimum_temperature_a_c     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n\n\n\n\n3.3.3 Tidy the data\nFinally, let’s clean up the weather data and create a column for date, change the necessary columns to numeric, and shorten the column names for simplicity.\n\nweather &lt;- data %&gt;% \n  mutate(station = station,\n       year = as.numeric(year),\n       Date = make_date(year = year, month = month, day = 1),\n       month = lubridate::month(Date, label = TRUE),         \n       day = as.numeric(day),\n       daily_rainfall_total_mm = as.numeric(daily_rainfall_total_mm), \n       highest_30_min_rainfall_mm = as.numeric(highest_30_min_rainfall_mm), \n       highest_60_min_rainfall_mm = as.numeric(highest_60_min_rainfall_mm),\n       highest_120_min_rainfall_mm = as.numeric(highest_120_min_rainfall_mm),\n       mean_temperature_c = as.numeric(mean_temperature_c), \n       maximum_temperature_c = as.numeric(maximum_temperature_c), \n       minimum_temperature_c = as.numeric(minimum_temperature_c)) %&gt;% \n  rename(\n    Station = station,\n    Year = year,\n    Month = month,\n    Day = day,\n    Rainfall = daily_rainfall_total_mm,\n    Rainfall30 = highest_30_min_rainfall_mm,\n    Rainfall60 = highest_60_min_rainfall_mm,\n    Rainfall120 = highest_120_min_rainfall_mm,\n    MeanTemperature = mean_temperature_c,\n    MaxTemperature = maximum_temperature_c,\n    MinTemperature = minimum_temperature_c\n  ) %&gt;% \n  subset(select = -c(mean_temperature_a_c,\n                     maximum_temperature_a_c,\n                     minimum_temperature_a_c, \n                     mean_wind_speed_km_h, \n                     max_wind_speed_km_h))\n\n\n\n3.3.4 Merge datasets\nLet’s join the weather data with its region information using the common variable ‘Station’.\n\nweather &lt;- merge(weather, region, by= \"Station\")\nglimpse(weather)\n\n\n\n3.3.5 Create subsets of data\nLet’s create subsets of weather data for only Temperature or Rainfall and save as RDS files for easy loading when we are developing for the subsequent analysis.\n\n #| eval: False\nTemp_YM &lt;- weather %&gt;% \n   group_by(Station, Region, Year, Month) %&gt;% \n   reframe(Date = Date,\n            MeanTemp = round(mean(MeanTemperature, na.rm = TRUE),1),\n            MaxTemp = round(max(MaxTemperature, na.rm = TRUE),1),\n            MinTemp = round(min(MinTemperature, na.rm = TRUE),1) ) %&gt;% \n   distinct() %&gt;% \n   ungroup() %&gt;% \n   filter(!is.na(MeanTemp))\n\nError in eval(expr, envir, enclos): object 'weather' not found\n\nwrite_rds(Temp_YM, \"data/temperature.rds\")\n\nError in eval(expr, envir, enclos): object 'Temp_YM' not found\n\nRainfall_YM &lt;- weather %&gt;% \n   group_by(Station, Region, Year, Month) %&gt;% \n   reframe(Date = Date,\n            TotalRainfall = round(sum(Rainfall, na.rm = TRUE),1),\n            TotalRainfall30 = round(sum(Rainfall30, na.rm = TRUE),1),\n            TotalRainfall60 = round(sum(Rainfall60, na.rm = TRUE),1),\n            TotalRainfall120 = round(sum(Rainfall120, na.rm = TRUE),1)) %&gt;% \n   distinct() %&gt;% \n   ungroup() %&gt;% \n   filter(!is.na(TotalRainfall))\n\nError in eval(expr, envir, enclos): object 'weather' not found\n\nwrite_rds(Rainfall_YM, \"data/rainfall.rds\")\n\nError in eval(expr, envir, enclos): object 'Rainfall_YM' not found"
  },
  {
    "objectID": "Station/data/geospatial/MPSZ-2019.html",
    "href": "Station/data/geospatial/MPSZ-2019.html",
    "title": "The Heat is On!",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  }
]