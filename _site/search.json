[
  {
    "objectID": "Station/station.html",
    "href": "Station/station.html",
    "title": "Stations",
    "section": "",
    "text": "#library(devtools)\n#install_github(\"andrew-loh/neaSG\", force = TRUE)\n\n\npacman::p_load(tmap, sf, tidyverse, sfdep, mapview, leaflet.providers, neaSG)\n\n\nstn &lt;- get_weatherstns()\n\n\nglimpse(stn)\n\nRows: 63\nColumns: 5\n$ id                 &lt;chr&gt; \"S77\", \"S109\", \"S117\", \"S64\", \"S90\", \"S114\", \"S50\",…\n$ device_id          &lt;chr&gt; \"S77\", \"S109\", \"S117\", \"S64\", \"S90\", \"S114\", \"S50\",…\n$ name               &lt;chr&gt; \"Alexandra Road\", \"Ang Mo Kio Avenue 5\", \"Banyan Ro…\n$ location.latitude  &lt;dbl&gt; 1.29370, 1.37640, 1.25600, 1.38240, 1.31910, 1.3800…\n$ location.longitude &lt;dbl&gt; 103.8125, 103.8492, 103.6790, 103.7603, 103.8191, 1…\n\n\n\nstn_sf &lt;- st_as_sf(stn, \n                   coords = c(\"location.longitude\", \"location.latitude\"), crs = 4326)\n\n\nglimpse(stn_sf)\n\nRows: 63\nColumns: 4\n$ id        &lt;chr&gt; \"S77\", \"S109\", \"S117\", \"S64\", \"S90\", \"S114\", \"S50\", \"S107\", …\n$ device_id &lt;chr&gt; \"S77\", \"S109\", \"S117\", \"S64\", \"S90\", \"S114\", \"S50\", \"S107\", …\n$ name      &lt;chr&gt; \"Alexandra Road\", \"Ang Mo Kio Avenue 5\", \"Banyan Road\", \"Buk…\n$ geometry  &lt;POINT [°]&gt; POINT (103.8125 1.2937), POINT (103.8492 1.3764), POIN…\n\n\n\ntmap_mode(\"view\")\n\ntm_basemap(\"CartoDB.Positron\") +\n  tm_shape(stn_sf)+\n  tm_dots(col = \"black\", size = 0.1)+\n  tm_view(set.zoom.limits = c(11,12))\n\n\n\n\n\n\n\nstn_selected &lt;- stn_sf %&gt;% \n  filter(id %in% c(\"S60\", \"S117\", \"S116\", \"S115\", \"S113\", \"S111\", \"S107\", \"S201\", \"S50\", \"S43\", \"S44\", \"S221\", \"S24\", \"S121\", \"S109\", \"S114\", \"S900\", \"S209\", \"S104\"))\n         \nglimpse(stn_selected)\n\nRows: 19\nColumns: 4\n$ id        &lt;chr&gt; \"S109\", \"S117\", \"S114\", \"S50\", \"S107\", \"S43\", \"S113\", \"S44\",…\n$ device_id &lt;chr&gt; \"S109\", \"S117\", \"S114\", \"S50\", \"S107\", \"S43\", \"S113\", \"S44\",…\n$ name      &lt;chr&gt; \"Ang Mo Kio Avenue 5\", \"Banyan Road\", \"Choa Chu Kang Avenue …\n$ geometry  &lt;POINT [°]&gt; POINT (103.8492 1.3764), POINT (103.679 1.256), POINT …\n\n\n\ntmap_mode(\"view\")\n\ntm_basemap(\"CartoDB.Positron\") +\n  tm_shape(stn_selected)+\n  tm_dots(col = \"black\", size = 0.1)"
  },
  {
    "objectID": "proposal/proposal.html",
    "href": "proposal/proposal.html",
    "title": "Project Proposal",
    "section": "",
    "text": "Source: Today Online"
  },
  {
    "objectID": "proposal/proposal.html#exploratory-data-analysis-and-visualizations",
    "href": "proposal/proposal.html#exploratory-data-analysis-and-visualizations",
    "title": "Project Proposal",
    "section": "4.1. Exploratory Data Analysis and Visualizations",
    "text": "4.1. Exploratory Data Analysis and Visualizations\nFirstly, our exploratory data analysis will uncover trends in Singapore’s historical climate data through a range of visualizations to convey our finding effectively:\n\nTime series analysis utilizes time-dependent decomposition to discern the variations, trends and anomalies in the climate data across the periods\nComparative analysis using box plots and violin plots to highlight the differences in climate data across periods or locations • Heatmap to plot changes in climate data by periods\nDistribution analysis through ridgeline plots to show the distribution of climate data by specific periods or locations\nCorrelation matrix between climate data to investigate the inter dependencies between the climate data\nInteractive maps to show geographical impacts of climate change, such as potential flooding areas and urban heat issues.\n\nThe visualizations will be created using R packages;ggplot2 for foundational graphics, extensions such as ggridges for ridgeline plots, ggthemes and patchwork for styling and layouts. Interactive graphics will be incorporated using ggiraph and plotly and the animations produced via gganimate.\nInteractivity can be included in the visualizations, such as coordinated multiple views to show temperature and rainfall data side-by-side. Animations can be used to showcase changes in temperature and rainfall over the years."
  },
  {
    "objectID": "proposal/proposal.html#predictive-model",
    "href": "proposal/proposal.html#predictive-model",
    "title": "Project Proposal",
    "section": "4.2. Predictive Model",
    "text": "4.2. Predictive Model\nWe aim to forecast future climate trends by exploring a suite of time series forecasting models:\n\nTime series forecasting is the process of using historical data to predict future values of a variable that changes over time. It is a common and useful technique for weather prediction.  There are many types of models for time series forecasting, such as exponential smoothing, ARIMA, SARIMA, VAR and neural networks.\nMachine learning approaches, such as Random Forest and Gradient Boosting Machines, for non-linear trend capturing.\n\nWe will compare and evaluate different models based on their predictive performance in terms of accuracy, precision and recall using evaluation metrics such as cross-validation, AIC and BIC, and forecasting accuracy measures using RMSE. The interpretability of models will also be a key consideration to ensure that the findings are understandable to the public (Figure 2).\nFigure 2 is a prototype of RShiny application."
  },
  {
    "objectID": "proposal/proposal.html#footnotes",
    "href": "proposal/proposal.html#footnotes",
    "title": "Project Proposal",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nhttps://www.ipcc.ch/report/ar6/syr/downloads/report/IPCC_AR6_SYR_SPM.pdf↩︎\nhttps://www.nccs.gov.sg/singapores-climate-action/impact-of-climate-change-in-singapore/↩︎\nhttps://www.mse.gov.sg/policies/climate-change#:~:text=Understanding%20Climate%20Change&text=A%20warmer%20climate%20leads%20to,more%20frequent%20extreme%20weather%20events.↩︎\nhttps://www.todayonline.com/singapore/explainer-why-climate-change-should-matter-singaporeans-and-what-government-doing-about-it↩︎\nhttp://www.weather.gov.sg/wp-content/uploads/2022/06/Station_Records.pdf↩︎"
  },
  {
    "objectID": "EDA/EDA-Temperature.html",
    "href": "EDA/EDA-Temperature.html",
    "title": "Exploratory Data Analysis - Temperature",
    "section": "",
    "text": "pacman::p_load(tidyverse, readr, psych, st, stars, tmap, sf,\n               ggstatsplot, plotly, ggplot2, ggdist, dplyr, ggiraph)"
  },
  {
    "objectID": "EDA/EDA-Temperature.html#analyse-temperature-using-maps",
    "href": "EDA/EDA-Temperature.html#analyse-temperature-using-maps",
    "title": "Exploratory Data Analysis - Temperature",
    "section": "4.1 Analyse temperature using maps",
    "text": "4.1 Analyse temperature using maps\nLet’s map the station to the planning area (PA).\n\n\nShow the code\nstation_to_PA &lt;- c(\n  \"Admiralty\" = \"WOODLANDS\",\n  \"Ang Mo Kio\" = \"ANG MO KIO\",\n  \"Boon Lay (East)\" = \"BOON LAY\",\n  \"Changi\" = \"CHANGI\",\n  \"Choa Chu Kang (South)\" = \"CHOA CHU KANG\",\n  \"Clementi\" = \"CLEMENTI\",\n  \"East Coast Parkway\" = \"BEDOK\",\n  \"Jurong (West)\" = \"JURONG WEST\",\n  \"Khatib\" = \"YISHUN\",\n  \"Marina Barrage\" = \"DOWNTOWN CORE\",\n  \"Newton\" = \"NEWTON\",\n  \"Pasir Panjang\" = \"PASIR PANJANG\",\n  \"Paya Lebar\" = \"PAYA LEBAR\",\n  \"Seletar\" = \"SELETAR\",\n  \"Sembawang\" = \"SEMBAWANG\",\n  \"Tai Seng\" = \"HOUGANG\",\n  \"Tengah\" = \"TENGAH\",\n  \"Tuas South\" = \"TUAS\"\n)\n\ntemperature$PA &lt;- station_to_PA[temperature$Station]\ntemperature &lt;- temperature[, c(\"PA\", setdiff(names(temperature), \"PA\"))]\nhead(temperature)\n\n\n# A tibble: 6 × 9\n  PA        Station   Region  Year Month Date       MeanTemp MaxTemp MinTemp\n  &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;  &lt;dbl&gt; &lt;ord&gt; &lt;date&gt;        &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 WOODLANDS Admiralty North   2009 Jan   2009-01-01     26.3    31.9    23.3\n2 WOODLANDS Admiralty North   2009 Feb   2009-02-01     26.8    33.4    23  \n3 WOODLANDS Admiralty North   2009 Mar   2009-03-01     26.9    34.5    22.2\n4 WOODLANDS Admiralty North   2009 Apr   2009-04-01     28.1    35.1    23.7\n5 WOODLANDS Admiralty North   2009 May   2009-05-01     28.5    34.7    21.8\n6 WOODLANDS Admiralty North   2009 Jun   2009-06-01     28.9    34.7    23.7\n\n\n\ntemp_map &lt;- temperature %&gt;% \n  group_by(PA, Station, Year) %&gt;% \n  summarise(Annual_Mean_Temperature = \n              mean(MeanTemp, na.rm = TRUE),\n            Annual_Maximum_Temperature = \n              max(MaxTemp, na.rm = TRUE),\n            Annual_Minimum_Temperature = \n              min(MinTemp, na.rm = TRUE)) %&gt;%\n  ungroup()\n\nglimpse(temp_map)\n\nRows: 323\nColumns: 6\n$ PA                         &lt;chr&gt; \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"…\n$ Station                    &lt;chr&gt; \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"…\n$ Year                       &lt;dbl&gt; 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2…\n$ Annual_Mean_Temperature    &lt;dbl&gt; 27.40000, 27.71667, 27.31667, 27.50833, 27.…\n$ Annual_Maximum_Temperature &lt;dbl&gt; 34.5, 36.0, 35.4, 34.8, 35.6, 35.0, 34.9, 3…\n$ Annual_Minimum_Temperature &lt;dbl&gt; 21.8, 21.7, 21.5, 21.8, 20.0, 21.8, 20.3, 2…\n\n\n\nmpsztemp &lt;- left_join(mpsz, temp_map,\n                         by = c(\"PLN_AREA_N\" = \"PA\"))\nglimpse(mpsztemp)\n\nRows: 2,357\nColumns: 12\n$ SUBZONE_N                  &lt;chr&gt; \"MARINA EAST\", \"INSTITUTION HILL\", \"ROBERTS…\n$ SUBZONE_C                  &lt;chr&gt; \"MESZ01\", \"RVSZ05\", \"SRSZ01\", \"WISZ01\", \"MU…\n$ PLN_AREA_N                 &lt;chr&gt; \"MARINA EAST\", \"RIVER VALLEY\", \"SINGAPORE R…\n$ PLN_AREA_C                 &lt;chr&gt; \"ME\", \"RV\", \"SR\", \"WI\", \"MU\", \"MP\", \"WI\", \"…\n$ REGION_N                   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRA…\n$ REGION_C                   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"WR\", \"CR\", \"CR\", \"WR\", \"…\n$ Station                    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ Year                       &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ Annual_Mean_Temperature    &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ Annual_Maximum_Temperature &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ Annual_Minimum_Temperature &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ geometry                   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((33222.98 29...…\n\n\nLet’s plot the annual mean temperature distribution across Singapore.\n\ntm_shape(mpsztemp) +\n  tm_polygons(col = \"Annual_Mean_Temperature\", \n              palette = \"Blues\", \n              style = \"jenks\") +\n  tm_view(set.zoom.limits = c(11,12))\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nIt seems like the northern area of Singapore has a cooler mean temperature.\n\n\nLet’s compare the maximum and minimum temperatures.\n\ntm_shape(mpsztemp) +\n  tm_polygons(col = \"Annual_Maximum_Temperature\", \n              palette = \"Blues\", \n              style = \"jenks\") +\n  tm_view(set.zoom.limits = c(11,12))\n\n\n\n\n\n\n\ntm_shape(mpsztemp) +\n  tm_polygons(col = \"Annual_Minimum_Temperature\", \n              palette = \"Blues\", \n              style = \"jenks\") +\n  tm_view(set.zoom.limits = c(11,12))"
  },
  {
    "objectID": "EDA/EDA-Temperature.html#temperature-time-series",
    "href": "EDA/EDA-Temperature.html#temperature-time-series",
    "title": "Exploratory Data Analysis - Temperature",
    "section": "4.2 Temperature Time Series",
    "text": "4.2 Temperature Time Series\n\n4.2.1 Overall - Temperature Time Series\n\n\nShow the code\ngg &lt;- ggplot(temperature, aes(x = Date, y = MeanTemp, \n                         color = factor(Year))) +\n    geom_line(linewidth = 0.1) +\n    geom_point(aes(text = paste0(\"Month:\", Month, \n                                \"&lt;br&gt;MeanTemp:\", MeanTemp, \"ºC\"))) +\n    labs(x = \"Year\", y = \"Monthly mean temperature (ºC)\", color = \"Year\",\n         title = \"Trend of Monthly Mean Temperature at Changi Station from 1981 to 2023\", \n         subtitle = \"Gentle trend line sloping upwards from 1981\",\n         caption = \"Data from Meteorological Service Singapore website\") +\n    geom_smooth(method = \"lm\", \n                se = FALSE, color = \"black\") +\n    theme_minimal() \n\nggplotly(gg, tooltip = \"text\") %&gt;%\n    layout(title = list(text = \n                        paste0(gg$labels$title, \"&lt;br&gt;\", \"&lt;sup&gt;\", \n                               gg$labels$subtitle, \"&lt;/sup&gt;\"),\n                        font = list(weight = \"bold\")),\n           showlegend = FALSE,\n    annotations = list(text = gg$labels$caption,\n                      xref = \"paper\", yref = \"paper\",\n                      x = 1000, y = 24,\n                      xanchor = \"right\", yanchor = \"top\",\n                      showarrow = FALSE)) \n\n\n\n\n\n\n\n\n4.2.2 Temperature Time Series by station\n\nTemp_station &lt;- temperature %&gt;%\n  group_by(Station, Year) %&gt;%\n  summarise(Temp = mean(MeanTemp, na.rm = TRUE)) %&gt;%\n  ungroup()\n\nTemp_station$mean_tooltip &lt;- c(paste0(\n  \"Year: \", Temp_station$Year,\n  \"\\n Station: \", Temp_station$Station,\n  \"\\n Mean Temp: \", Temp_station$Temp, \"°C\"))\n\nline &lt;- ggplot(data = Temp_station,\n               aes(x = Year,\n                   y = Temp,\n                   group = Station,\n                   color = Station,\n                   data_id = Station)) +\n  geom_line_interactive(size = 1.2,\n                        alpha = 0.4) +\n  geom_point_interactive(aes(tooltip = Temp_station$mean_tooltip),\n                         fill = \"white\",\n                         size = 1,\n                         stroke = 1,\n                         shape = 21) +\n  theme_classic() +\n  ylab(\"Annual Mean Temperature (°C)\") +\n  xlab(\"Year\") +\n  ggtitle(\"Annual Average of Mean Temperatures\") +\n  theme(plot.title = element_text(size = 10),\n        plot.subtitle = element_text(size = 8)) \n\ngirafe(ggobj = line, \n       width_svg = 8,\n       height_svg = 6 * 0.618,\n       options = list(\n         opts_hover(css = \"stroke-width: 2.5; opacity: 1;\"),\n         opts_hover_inv(css = \"stroke-width: 1;opacity:0.6;\")))"
  },
  {
    "objectID": "EDA/EDA-Temperature.html#confidence-interval-of-mean-temperature",
    "href": "EDA/EDA-Temperature.html#confidence-interval-of-mean-temperature",
    "title": "Exploratory Data Analysis - Temperature",
    "section": "4.3 COnfidence Interval of Mean Temperature",
    "text": "4.3 COnfidence Interval of Mean Temperature\n\n\nShow the code\nTemp_yr_error &lt;- temperature %&gt;%\n  group_by(Year) %&gt;%\n  summarise(n = n(), Temp = mean(MeanTemp, na.rm = TRUE), \n            sd = sd(MeanTemp, na.rm = TRUE)) %&gt;%\n  mutate(se = sd/sqrt(n-1)) %&gt;% \n  ungroup()\n\nmodel &lt;- lm(Temp ~ Year, Temp_yr_error)\ny_intercept = coef(model)[1] \nslope_coeff = coef(model)[2]\nadjust_yintercept = slope_coeff * 1982 + y_intercept\n\ngg &lt;- ggplot(Temp_yr_error) +\n       geom_errorbar(aes(x = factor(Year), ymin = Temp - 2.58 * se, \n                      ymax = Temp+2.58*se), \n                      width=0.2, colour=\"black\", \n                      alpha=0.9, size=0.5) +\n       geom_point(aes(x = factor(Year), y = Temp, \n             text = paste0(\"Year:\", `Year`, \n                          \"&lt;br&gt;Avg. Temp:\", round(Temp, digits = 2),\n                          \"&lt;br&gt;95% CI:[\", \n                          round((Temp - 2.58 * se), digits = 2), \",\",\n                          round((Temp + 2.58 * se), digits = 2),\"]\")),\n             stat=\"identity\", color=\"darkred\", \n             size = 1.5, alpha = 1) +\n       geom_abline(slope = round(slope_coeff, 4), \n                   intercept = adjust_yintercept,\n                   untf = TRUE,\n                   color = \"blue\",\n                   linetype = \"dashed\")+\n       geom_text(aes(x = 11, y = 27.8, colour = \"blue\",\n                     label = paste0(\"Temp=\", \n                                    round(slope_coeff, 4), \"* Year \",\n                                    round(y_intercept, 4)))) +\n       labs (x = \"Year\", y = \"Annual mean temperatures (°C)\",\n             title = \"99% Confidence interval of annual mean temperatures by year\",\n             subtitle = \"From 1982 to 2023\",\n             caption = \"Data from Meteorological Service Singapore website\") +\n       theme_minimal() + \n       theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1),\n             plot.title = element_text(face = \"bold\", size = 12))\n\nggplotly(gg, tooltip = \"text\") %&gt;%\n    layout(title = list(text = \n                        paste0(gg$labels$title, \"&lt;br&gt;\", \"&lt;sup&gt;\", \n                               gg$labels$subtitle, \"&lt;/sup&gt;\"),\n                        font = list(weight = \"bold\")),\n           showlegend = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can observe that the mean temperature over the years have increased and the confidence intervals have narrowed."
  },
  {
    "objectID": "EDA/EDA-Temperature.html#temperature-across-the-months",
    "href": "EDA/EDA-Temperature.html#temperature-across-the-months",
    "title": "Exploratory Data Analysis - Temperature",
    "section": "4.4 Temperature across the months",
    "text": "4.4 Temperature across the months\n\n4.4.1 Box plot across the months\n\n\nShow the code\ngg &lt;- ggplot(temperature, \n       aes(x = factor(Month, levels = month.abb), y = MeanTemp)) +\n  geom_violin(color = \"navy\", fill = \"lightblue\") +\n  geom_hline(data = temperature, \n             aes(yintercept = mean(MeanTemp, na.rm = TRUE)),\n             linetype = \"dashed\", size = 1, colour = \"brown\") +\n  geom_text(aes(x = 4.5, y = 27.3, \n                 label = paste0(\"Mean : \", \n                                round(mean(MeanTemp,na.rm = TRUE),2), \"°C\")), \n            colour = \"brown\") +\n  stat_summary(fun = mean, geom = \"point\", \n               shape = 20, size = 3, color = \"orange\",\n               aes(text = paste0(\"Mean : \", round(after_stat(y), 2), \"°C\"))) +\n  theme_minimal() +\n  labs(title = \"Daily mean temperature across each month from 1981 to 2023\",\n       subtitle = \"November to February are cooler as compared to the rest of the year\",\n        y = \"Daily mean Temperatures (°C)\",\n        x = \"Month\",\n        caption = \"Data from Meteorological Service Singapore website\")\n\nggplotly(gg, tooltip = \"text\") %&gt;%\n    layout(title = list(text =\n                        paste0(gg$labels$title, \"&lt;br&gt;\", \"&lt;sup&gt;\",\n                               gg$labels$subtitle, \"&lt;/sup&gt;\"),\n                        font = list(weight = \"bold\")))\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can observe that temperature in November to February are below the average temperature.\n\n\n\n\n4.4.2 Heatmap across the months\n\n\nShow the code\nTemp &lt;- temperature %&gt;% \n        group_by(Year, Month) %&gt;% \n        summarise(MTemp = mean(MeanTemp, na.rm = TRUE))\n\ngg &lt;- ggplot(Temp, aes(factor(Month, levels = month.abb), factor(Year), \n                          fill = MTemp)) + \n    geom_tile(color = \"white\",\n              aes(text = paste0(Year, \"-\", Month,\n                                \"&lt;br&gt;Temp:\", round(MTemp, 2), \"°C\"))) + \n    theme_minimal() + \n    scale_fill_gradient(name = \"Temperature\",\n                        low = \"sky blue\", \n                        high = \"dark blue\") +\n    labs(x = NULL, y = NULL, \n         title = \"Mean temperatures by year and month\",\n         subtitle = \"Hotter in more months of 2023 as compared to the other years\")\n\nggplotly(gg, tooltip = \"text\")\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can observe that temperature in May and June are consistently high across the years."
  },
  {
    "objectID": "EDA/Data_Preparation.html",
    "href": "EDA/Data_Preparation.html",
    "title": "Data Preparation",
    "section": "",
    "text": "This page will explain in detail how we extract the data from the Meteorological Service Singapore (MSS) website and how we clean the data for our subsequent analysis."
  },
  {
    "objectID": "EDA/Data_Preparation.html#installing-r-packages",
    "href": "EDA/Data_Preparation.html#installing-r-packages",
    "title": "Data Preparation",
    "section": "3.1 Installing R packages",
    "text": "3.1 Installing R packages\nThe code below uses p_load() of the Pacman package to check if all the required packages are installed on the laptop. If they are, then they will be launched into the R environment.\n\n\n\nPackage\nDescription\n\n\ntidyverse\nA collection of core packages designed for data science used extensively for data preparation and wrangling.\n\n\nlubridate\nFor manipulating date-times.\n\n\njanitor\nFor quick formatting of data frame columns.\n\n\nfs\nFor retrieving a list of file names in our directory for import into R\n\n\nvisdat\nFor checking missing values in a dataframe\n\n\n\n\npacman::p_load(readr, tidyverse, forecast, janitor, fs, visdat)"
  },
  {
    "objectID": "EDA/Data_Preparation.html#importing-data",
    "href": "EDA/Data_Preparation.html#importing-data",
    "title": "Data Preparation",
    "section": "3.2 Importing data",
    "text": "3.2 Importing data\nLet’s read all the 5,547 CSV files downloaded for the 18 weather stations that have records from the year 1980 onwards.\n\ndir_ls() function from the fs package in R to list filenames in our directory where we have saved the monthly historical records.\nmap_df() function from the purrr package is used to iterate over each file in the directory.\nlocale argument in read_csv() is to specify the encoding as Latin-1, as some of the headers contain special characters, like the degree symbol (°). The Latin-1 encoding ensures R can read and process such special characters.\ncol_types argument imports all columns as character data type.\nclean_names() of the janitor package converts into snake case and transliterates special characters such as the degree symbol (°) to ASCII.\n\n\nfilenames &lt;- fs::dir_ls(\"data/raw_data/\") \n\n# Read all files and clean the column names\ndata &lt;- filenames %&gt;%\n    map_df(~ read_csv(.x, \n                      locale = locale(encoding = \"latin1\"),\n                      col_types = cols(.default = \"character\")\n                      ) %&gt;% \n             janitor::clean_names()\n    ) \n\nglimpse(data)\nwrite_rds(data, \"data/data.rds\")\n\n\n\n\n\n\n\nNote\n\n\n\nAll the 18 weather stations have a total of 168,836 records.\nThe data shows that there are two sets of variables for mean, maximum, and minimum temperature records:\n\nmean_temperature_c, maximum_temperature_c, and minimum_temperature_c\nmean_temperature_a_c, maximum_temperature_a_c, and minimum_temperature_a_c\n\nSome year’s data are in the first set of variables and others are in the second set of variables. This might happen during clean_names() where there is a minor difference in the column names from different files.\n\n\n\ndata &lt;- read_rds(\"data/data.rds\")\n\nIt will be meaningful to also analyse weather data by region in Singapore. Hence, we also searched for each weather station’s region on public websites like the HDB website and data.gov.sg. Let’s import the region information now.\n\nregion &lt;- read_csv(\"data/Region.csv\") \nglimpse(region)\n\nRows: 18\nColumns: 2\n$ Station &lt;chr&gt; \"Admiralty\", \"Ang Mo Kio\", \"Boon Lay (East)\", \"Changi\", \"Choa …\n$ Region  &lt;chr&gt; \"North\", \"North-East\", \"West\", \"East\", \"West\", \"West\", \"East\",…"
  },
  {
    "objectID": "EDA/Data_Preparation.html#data-wrangling",
    "href": "EDA/Data_Preparation.html#data-wrangling",
    "title": "Data Preparation",
    "section": "3.3 Data Wrangling",
    "text": "3.3 Data Wrangling\n\n3.3.1 Remove extra columns\nLet’s use the coalesce() function to copy the values from the second set of temperature values to the first set and then deselect the second set of columns. We are also not focusing on the wind speed variables, hence we will deselect the 2 variables on wind speed.\n\ndata$mean_temperature_c &lt;- coalesce(data$mean_temperature_c, \n                                    data$mean_temperature_a_c) \ndata$maximum_temperature_c &lt;- coalesce(data$maximum_temperature_c, \n                                       data$maximum_temperature_a_c)\ndata$minimum_temperature_c &lt;- coalesce(data$minimum_temperature_c,     \n                                       data$minimum_temperature_a_c)\n\ndata %&gt;% \n  select(-c(mean_temperature_a_c, \n            maximum_temperature_a_c, \n            minimum_temperature_a_c, \n            mean_wind_speed_km_h, \n            max_wind_speed_km_h))\n\n# A tibble: 168,836 × 11\n   station    year  month day   daily_rainfall_total_mm highest_30_min_rainfal…¹\n   &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;                   &lt;chr&gt;                   \n 1 Paya Lebar 1981  1     1     0                       \"\\u0097\"                \n 2 Paya Lebar 1981  1     2     0.4                     \"\\u0097\"                \n 3 Paya Lebar 1981  1     3     0                       \"\\u0097\"                \n 4 Paya Lebar 1981  1     4     3.3                     \"\\u0097\"                \n 5 Paya Lebar 1981  1     5     0                       \"\\u0097\"                \n 6 Paya Lebar 1981  1     6     0.8                     \"\\u0097\"                \n 7 Paya Lebar 1981  1     7     4.6                     \"\\u0097\"                \n 8 Paya Lebar 1981  1     8     2.3                     \"\\u0097\"                \n 9 Paya Lebar 1981  1     9     0.3                     \"\\u0097\"                \n10 Paya Lebar 1981  1     10    0                       \"\\u0097\"                \n# ℹ 168,826 more rows\n# ℹ abbreviated name: ¹​highest_30_min_rainfall_mm\n# ℹ 5 more variables: highest_60_min_rainfall_mm &lt;chr&gt;,\n#   highest_120_min_rainfall_mm &lt;chr&gt;, mean_temperature_c &lt;chr&gt;,\n#   maximum_temperature_c &lt;chr&gt;, minimum_temperature_c &lt;chr&gt;\n\nglimpse(data)\n\nRows: 168,836\nColumns: 16\n$ station                     &lt;chr&gt; \"Paya Lebar\", \"Paya Lebar\", \"Paya Lebar\", …\n$ year                        &lt;chr&gt; \"1981\", \"1981\", \"1981\", \"1981\", \"1981\", \"1…\n$ month                       &lt;chr&gt; \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1…\n$ day                         &lt;chr&gt; \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9…\n$ daily_rainfall_total_mm     &lt;chr&gt; \"0\", \"0.4\", \"0\", \"3.3\", \"0\", \"0.8\", \"4.6\",…\n$ highest_30_min_rainfall_mm  &lt;chr&gt; \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\…\n$ highest_60_min_rainfall_mm  &lt;chr&gt; \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\…\n$ highest_120_min_rainfall_mm &lt;chr&gt; \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\…\n$ mean_temperature_c          &lt;chr&gt; \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\…\n$ maximum_temperature_c       &lt;chr&gt; \"30.8\", \"29.5\", \"30.4\", \"30.7\", \"27.2\", \"3…\n$ minimum_temperature_c       &lt;chr&gt; \"22.7\", \"23.1\", \"23.5\", \"23.5\", \"23.2\", \"2…\n$ mean_wind_speed_km_h        &lt;chr&gt; \"14.3\", \"9.4\", \"11.7\", \"9.4\", \"9.1\", \"9.6\"…\n$ max_wind_speed_km_h         &lt;chr&gt; \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\u0097\", \"\\…\n$ mean_temperature_a_c        &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ maximum_temperature_a_c     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ minimum_temperature_a_c     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n\n\n\n\n3.3.2 Remove weird characters\nThere are some weird characters (‘097’) in the data frame. Let’s replace them with NA.\n\ndata &lt;- data %&gt;% \n  mutate_all(~ ifelse(. == \"\\u0097\", NA, .))\nglimpse(data)\n\nRows: 168,836\nColumns: 16\n$ station                     &lt;chr&gt; \"Paya Lebar\", \"Paya Lebar\", \"Paya Lebar\", …\n$ year                        &lt;chr&gt; \"1981\", \"1981\", \"1981\", \"1981\", \"1981\", \"1…\n$ month                       &lt;chr&gt; \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1…\n$ day                         &lt;chr&gt; \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9…\n$ daily_rainfall_total_mm     &lt;chr&gt; \"0\", \"0.4\", \"0\", \"3.3\", \"0\", \"0.8\", \"4.6\",…\n$ highest_30_min_rainfall_mm  &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ highest_60_min_rainfall_mm  &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ highest_120_min_rainfall_mm &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ mean_temperature_c          &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ maximum_temperature_c       &lt;chr&gt; \"30.8\", \"29.5\", \"30.4\", \"30.7\", \"27.2\", \"3…\n$ minimum_temperature_c       &lt;chr&gt; \"22.7\", \"23.1\", \"23.5\", \"23.5\", \"23.2\", \"2…\n$ mean_wind_speed_km_h        &lt;chr&gt; \"14.3\", \"9.4\", \"11.7\", \"9.4\", \"9.1\", \"9.6\"…\n$ max_wind_speed_km_h         &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ mean_temperature_a_c        &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ maximum_temperature_a_c     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ minimum_temperature_a_c     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n\n\n\n\n3.3.3 Tidy the data\nFinally, let’s clean up the weather data and create a column for date, change the necessary columns to numeric, and shorten the column names for simplicity.\n\nweather &lt;- data %&gt;% \n  mutate(station = station,\n       year = as.numeric(year),\n       Date = make_date(year = year, month = month, day = 1),\n       month = lubridate::month(Date, label = TRUE),         \n       day = as.numeric(day),\n       daily_rainfall_total_mm = as.numeric(daily_rainfall_total_mm), \n       highest_30_min_rainfall_mm = as.numeric(highest_30_min_rainfall_mm), \n       highest_60_min_rainfall_mm = as.numeric(highest_60_min_rainfall_mm),\n       highest_120_min_rainfall_mm = as.numeric(highest_120_min_rainfall_mm),\n       mean_temperature_c = as.numeric(mean_temperature_c), \n       maximum_temperature_c = as.numeric(maximum_temperature_c), \n       minimum_temperature_c = as.numeric(minimum_temperature_c)) %&gt;% \n  rename(\n    Station = station,\n    Year = year,\n    Month = month,\n    Day = day,\n    Rainfall = daily_rainfall_total_mm,\n    Rainfall30 = highest_30_min_rainfall_mm,\n    Rainfall60 = highest_60_min_rainfall_mm,\n    Rainfall120 = highest_120_min_rainfall_mm,\n    MeanTemperature = mean_temperature_c,\n    MaxTemperature = maximum_temperature_c,\n    MinTemperature = minimum_temperature_c\n  ) %&gt;% \n  subset(select = -c(mean_temperature_a_c,\n                     maximum_temperature_a_c,\n                     minimum_temperature_a_c, \n                     mean_wind_speed_km_h, \n                     max_wind_speed_km_h))\n\n\n\n3.3.4 Merge datasets\nLet’s join the weather data with its region information using the common variable ‘Station’.\n\nweather &lt;- merge(weather, region, by= \"Station\")\nglimpse(weather)\n\nRows: 168,836\nColumns: 13\n$ Station         &lt;chr&gt; \"Admiralty\", \"Admiralty\", \"Admiralty\", \"Admiralty\", \"A…\n$ Year            &lt;dbl&gt; 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, …\n$ Month           &lt;ord&gt; Jan, Jan, Jan, Jan, Jan, Jan, Jan, Jan, Jan, Jan, Jan,…\n$ Day             &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,…\n$ Rainfall        &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Rainfall30      &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Rainfall60      &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Rainfall120     &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ MeanTemperature &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ MaxTemperature  &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ MinTemperature  &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Date            &lt;date&gt; 2009-01-01, 2009-01-01, 2009-01-01, 2009-01-01, 2009-…\n$ Region          &lt;chr&gt; \"North\", \"North\", \"North\", \"North\", \"North\", \"North\", …\n\n\n\n\n3.3.5 Create subsets of data\nLet’s create subsets of weather data for only Temperature or Rainfall and save them as RDS files for easy loading when we are developing for the subsequent analysis.\n\nTemp_YM &lt;- weather %&gt;% \n   group_by(Station, Region, Year, Month) %&gt;% \n   reframe(Date = Date,            \n           MeanTemp = round(mean(MeanTemperature, na.rm = TRUE),1),\n           MaxTemp = round(max(MaxTemperature, na.rm = TRUE),1),\n           MinTemp = round(min(MinTemperature, na.rm = TRUE),1) ) %&gt;% \n   distinct() %&gt;% \n   ungroup() %&gt;% \n   filter(!is.na(MeanTemp))\n\nwrite_rds(Temp_YM, \"data/temperature.rds\")\n\nRainfall_YM &lt;- weather %&gt;% \n   group_by(Station, Region, Year, Month) %&gt;% \n   reframe(Date = Date,\n           TotalRainfall = round(sum(Rainfall, na.rm = TRUE),1),\n           TotalRainfall30 = round(sum(Rainfall30, na.rm = TRUE),1),\n           TotalRainfall60 = round(sum(Rainfall60, na.rm = TRUE),1),\n           TotalRainfall120 = round(sum(Rainfall120, na.rm = TRUE),1)) %&gt;% \n   distinct() %&gt;% \n   ungroup() %&gt;% \n   filter(!is.na(TotalRainfall))\n\nwrite_rds(Rainfall_YM, \"data/rainfall.rds\")\n\nCheck to ensure there is no missing data in Temp_YM and Rainfall_YM.\n\nvis_miss(Temp_YM)\n\n\n\nvis_miss(Rainfall_YM)\n\n\n\n\nFinally, we create further subsets to be used in Confirmatory Data Analysis:\n\nTemp_Annual &lt;- weather %&gt;%\n  group_by(Station, Region, Year) %&gt;%\n  summarise(Avg_Mean_Temp = round(mean(MeanTemperature, na.rm = TRUE),1),\n            Avg_Max_Temp = round(mean(MaxTemperature, na.rm = TRUE),1),\n            Avg_Min_Temp = round(mean(MinTemperature, na.rm = TRUE),1),\n            Max_Temp = round(max(MaxTemperature, na.rm = TRUE),1),\n            Min_Temp = round(min(MinTemperature, na.rm = TRUE),1)) %&gt;%\n  distinct() %&gt;%\n  ungroup() %&gt;%\n  filter(!is.na(Avg_Mean_Temp))\n\nwrite_rds(Temp_Annual, \"data/temp_annual.rds\")\n\nTemp_Monthly &lt;- weather %&gt;%\n  group_by(Station, Region, Year, Month) %&gt;%\n  summarise(Avg_Mean_Temp = round(mean(MeanTemperature, na.rm = TRUE),1),\n            Avg_Max_Temp = round(mean(MaxTemperature, na.rm = TRUE),1),\n            Avg_Min_Temp = round(mean(MinTemperature, na.rm = TRUE),1),\n            Max_Temp = round(max(MaxTemperature, na.rm = TRUE),1),\n            Min_Temp = round(min(MinTemperature, na.rm = TRUE),1)) %&gt;%\n  distinct() %&gt;%\n  ungroup() %&gt;%\n  filter(!is.na(Avg_Mean_Temp))\n\nwrite_rds(Temp_Monthly, \"data/temp_monthly.rds\")\n\nRainfall_Annual &lt;- weather %&gt;%\n  group_by(Station, Region, Year) %&gt;% \n   reframe(Date = Date,\n           Total_Rf = round(sum(Rainfall, na.rm = TRUE),1),\n           Total_Rf_30 = round(sum(Rainfall30, na.rm = TRUE),1),\n           Total_Rf_60 = round(sum(Rainfall60, na.rm = TRUE),1),\n           Total_Rf_120 = round(sum(Rainfall120, na.rm = TRUE),1),\n           Avg_Total_Rf = round(mean(Rainfall, na.rm = TRUE),1),\n           Avg_Total_Rf30 = round(mean(Rainfall30, na.rm = TRUE),1),\n           Avg_Total_Rf60 = round(mean(Rainfall60, na.rm = TRUE),1),\n           Avg_Total_Rf120 = round(mean(Rainfall120, na.rm = TRUE),1),\n           Min_Total_Rf = round(min(Rainfall, na.rm = TRUE),1),\n           Max_Total_Rf = round(max(Rainfall, na.rm = TRUE),1)) %&gt;% \n   distinct() %&gt;% \n   ungroup() %&gt;% \n   filter(!is.na(Total_Rf))\n\nwrite_rds(Rainfall_Annual, \"data/rf_annual.rds\")\n\nRainfall_Monthly &lt;- weather %&gt;%\n  group_by(Station, Region, Year, Month) %&gt;% \n   reframe(Date = Date,\n           Total_Rf = round(sum(Rainfall, na.rm = TRUE),1),\n           Total_Rf_30 = round(sum(Rainfall30, na.rm = TRUE),1),\n           Total_Rf_60 = round(sum(Rainfall60, na.rm = TRUE),1),\n           Total_Rf_120 = round(sum(Rainfall120, na.rm = TRUE),1),\n           Avg_Total_Rf = round(mean(Rainfall, na.rm = TRUE),1),\n           Avg_Total_Rf30 = round(mean(Rainfall30, na.rm = TRUE),1),\n           Avg_Total_Rf60 = round(mean(Rainfall60, na.rm = TRUE),1),\n           Avg_Total_Rf120 = round(mean(Rainfall120, na.rm = TRUE),1),\n           Min_Total_Rf = round(min(Rainfall, na.rm = TRUE),1),\n           Max_Total_Rf = round(max(Rainfall, na.rm = TRUE),1)) %&gt;% \n   distinct() %&gt;% \n   ungroup() %&gt;% \n   filter(!is.na(Total_Rf))\n\nwrite_rds(Rainfall_Monthly, \"data/rf_monthly.rds\")"
  },
  {
    "objectID": "EDA/data/geospatial/MPSZ-2019.html",
    "href": "EDA/data/geospatial/MPSZ-2019.html",
    "title": "The Heat is On!",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "EDA/EDA-Rainfall.html",
    "href": "EDA/EDA-Rainfall.html",
    "title": "Exploratory Data Analysis - Rainfall",
    "section": "",
    "text": "pacman::p_load(tidyverse, readr, psych, st, stars, tmap, sf,\n               ggstatsplot, plotly, ggplot2, ggdist, dplyr, ggiraph)"
  },
  {
    "objectID": "EDA/EDA-Rainfall.html#analyse-rainfall-using-maps",
    "href": "EDA/EDA-Rainfall.html#analyse-rainfall-using-maps",
    "title": "Exploratory Data Analysis - Rainfall",
    "section": "4.1 Analyse rainfall using maps",
    "text": "4.1 Analyse rainfall using maps\nLet’s map the station to the planning area (PA).\n\n\nShow the code\nstation_to_PA &lt;- c(\n  \"Admiralty\" = \"WOODLANDS\",\n  \"Ang Mo Kio\" = \"ANG MO KIO\",\n  \"Boon Lay (East)\" = \"BOON LAY\",\n  \"Changi\" = \"CHANGI\",\n  \"Choa Chu Kang (South)\" = \"CHOA CHU KANG\",\n  \"Clementi\" = \"CLEMENTI\",\n  \"East Coast Parkway\" = \"BEDOK\",\n  \"Jurong (West)\" = \"JURONG WEST\",\n  \"Khatib\" = \"YISHUN\",\n  \"Marina Barrage\" = \"DOWNTOWN CORE\",\n  \"Newton\" = \"NEWTON\",\n  \"Pasir Panjang\" = \"PASIR PANJANG\",\n  \"Paya Lebar\" = \"PAYA LEBAR\",\n  \"Seletar\" = \"SELETAR\",\n  \"Sembawang\" = \"SEMBAWANG\",\n  \"Tai Seng\" = \"HOUGANG\",\n  \"Tengah\" = \"TENGAH\",\n  \"Tuas South\" = \"TUAS\"\n)\n\nrainfall$PA &lt;- station_to_PA[rainfall$Station]\nrainfall &lt;- rainfall[, c(\"PA\", setdiff(names(rainfall), \"PA\"))]\nhead(rainfall)\n\n\n# A tibble: 6 × 10\n  PA        Station  Region  Year Month Date       TotalRainfall TotalRainfall30\n  &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;  &lt;dbl&gt; &lt;ord&gt; &lt;date&gt;             &lt;dbl&gt;           &lt;dbl&gt;\n1 WOODLANDS Admiral… North   2009 Jan   2009-01-01           0.8               0\n2 WOODLANDS Admiral… North   2009 Feb   2009-02-01         148                 0\n3 WOODLANDS Admiral… North   2009 Mar   2009-03-01         348                 0\n4 WOODLANDS Admiral… North   2009 Apr   2009-04-01         149.                0\n5 WOODLANDS Admiral… North   2009 May   2009-05-01         206.                0\n6 WOODLANDS Admiral… North   2009 Jun   2009-06-01          92                 0\n# ℹ 2 more variables: TotalRainfall60 &lt;dbl&gt;, TotalRainfall120 &lt;dbl&gt;\n\n\n\nrain_map &lt;- rainfall %&gt;% \n  group_by(PA, Station, Year) %&gt;% \n  summarise(Annual_Rainfall = \n              sum(TotalRainfall, na.rm = TRUE)) %&gt;%\n  ungroup()\n\nglimpse(rain_map)\n\nRows: 469\nColumns: 4\n$ PA              &lt;chr&gt; \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\"…\n$ Station         &lt;chr&gt; \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\"…\n$ Year            &lt;dbl&gt; 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, …\n$ Annual_Rainfall &lt;dbl&gt; 830.6, 2849.2, 3050.4, 2579.6, 3240.0, 1961.4, 2018.4,…\n\n\n\nmpsztemp &lt;- left_join(mpsz, rain_map,\n                         by = c(\"PLN_AREA_N\" = \"PA\"))\nglimpse(mpsztemp)\n\nRows: 3,485\nColumns: 10\n$ SUBZONE_N       &lt;chr&gt; \"MARINA EAST\", \"INSTITUTION HILL\", \"ROBERTSON QUAY\", \"…\n$ SUBZONE_C       &lt;chr&gt; \"MESZ01\", \"RVSZ05\", \"SRSZ01\", \"WISZ01\", \"MUSZ02\", \"MPS…\n$ PLN_AREA_N      &lt;chr&gt; \"MARINA EAST\", \"RIVER VALLEY\", \"SINGAPORE RIVER\", \"WES…\n$ PLN_AREA_C      &lt;chr&gt; \"ME\", \"RV\", \"SR\", \"WI\", \"MU\", \"MP\", \"WI\", \"WI\", \"SI\", …\n$ REGION_N        &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", …\n$ REGION_C        &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"WR\", \"CR\", \"CR\", \"WR\", \"WR\", \"CR\", …\n$ Station         &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"Marina Ba…\n$ Year            &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 2010, 2011…\n$ Annual_Rainfall &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 1112.0, 23…\n$ geometry        &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((33222.98 29..., MULTIPOLY…\n\n\nLet’s plot the annual mean temperature distribution across Singapore.\n\ntm_shape(mpsztemp) +\n  tm_polygons(col = \"Annual_Rainfall\", \n              palette = \"Blues\", \n              style = \"jenks\") +\n  tm_view(set.zoom.limits = c(11,12))\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nIt seems like the northern area of Singapore has a cooler mean temperature."
  },
  {
    "objectID": "EDA/EDA-Rainfall.html#rainfall-time-series",
    "href": "EDA/EDA-Rainfall.html#rainfall-time-series",
    "title": "Exploratory Data Analysis - Rainfall",
    "section": "4.2 Rainfall Time Series",
    "text": "4.2 Rainfall Time Series\n\n4.2.1 Overall - Rainfall Time Series\n\n\nShow the code\ngg &lt;- ggplot(rainfall, aes(x = Date, y = TotalRainfall, \n                         color = factor(Year))) +\n    geom_line(linewidth = 0.1) +\n    geom_point(aes(text = paste0(\"Month:\", Month, \n                                \"&lt;br&gt;Total Rainfall:\", TotalRainfall, \"mm\"))) +\n    labs(x = \"Year\", y = \"Monthly Total Rainfall (mm)\", color = \"Year\",\n         title = \"Trend of Monthly Total Rainfall from 1981 to 2023\", \n         subtitle = \"Gentle trend line sloping upwards from 1981\",\n         caption = \"Data from Meteorological Service Singapore website\") +\n    geom_smooth(method = \"lm\", \n                se = FALSE, color = \"black\") +\n    theme_minimal() \n\nggplotly(gg, tooltip = \"text\") %&gt;%\n    layout(title = list(text = \n                        paste0(gg$labels$title, \"&lt;br&gt;\", \"&lt;sup&gt;\", \n                               gg$labels$subtitle, \"&lt;/sup&gt;\"),\n                        font = list(weight = \"bold\")),\n           showlegend = FALSE,\n    annotations = list(text = gg$labels$caption,\n                      xref = \"paper\", yref = \"paper\",\n                      x = 1000, y = 24,\n                      xanchor = \"right\", yanchor = \"top\",\n                      showarrow = FALSE)) \n\n\n\n\n\n\n\n\n4.2.2 Rainfall Time Series by station\n\nrain_station &lt;- rainfall %&gt;%\n  group_by(Station, Year) %&gt;%\n  summarise(rain = sum(TotalRainfall, na.rm = TRUE)) %&gt;%\n  ungroup()\n\nrain_station$mean_tooltip &lt;- c(paste0(\n  \"Year: \", rain_station$Year,\n  \"\\n Station: \", rain_station$Station,\n  \"\\n Total Rainfall: \", rain_station$rain, \"mm\"))\n\nline &lt;- ggplot(data = rain_station,\n               aes(x = Year,\n                   y = rain,\n                   group = Station,\n                   color = Station,\n                   data_id = Station)) +\n  geom_line_interactive(size = 1.2,\n                        alpha = 0.4) +\n  geom_point_interactive(aes(tooltip = rain_station$mean_tooltip),\n                         fill = \"white\",\n                         size = 1,\n                         stroke = 1,\n                         shape = 21) +\n  theme_classic() +\n  ylab(\"Annual Total Rainfall(mm)\") +\n  xlab(\"Year\") +\n  ggtitle(\"Annual Total Rainfall\") +\n  theme(plot.title = element_text(size = 10),\n        plot.subtitle = element_text(size = 8)) \n\ngirafe(ggobj = line, \n       width_svg = 8,\n       height_svg = 6 * 0.618,\n       options = list(\n         opts_hover(css = \"stroke-width: 2.5; opacity: 1;\"),\n         opts_hover_inv(css = \"stroke-width: 1;opacity:0.6;\")))"
  },
  {
    "objectID": "EDA/EDA-Rainfall.html#confidence-interval-of-total-rainfall",
    "href": "EDA/EDA-Rainfall.html#confidence-interval-of-total-rainfall",
    "title": "Exploratory Data Analysis - Rainfall",
    "section": "4.3 Confidence Interval of Total Rainfall",
    "text": "4.3 Confidence Interval of Total Rainfall\n\n\nShow the code\nrain_yr_error &lt;- rainfall %&gt;%\n  group_by(Year) %&gt;%\n  summarise(n = n(), rain = sum(TotalRainfall, na.rm = TRUE), \n            sd = sd(TotalRainfall, na.rm = TRUE)) %&gt;%\n  mutate(se = sd/sqrt(n-1)) %&gt;% \n  ungroup()\n\nmodel &lt;- lm(rain ~ Year, rain_yr_error)\ny_intercept = coef(model)[1] \nslope_coeff = coef(model)[2]\nadjust_yintercept = slope_coeff * 1982 + y_intercept\n\ngg &lt;- ggplot(rain_yr_error) +\n       geom_errorbar(aes(x = factor(Year), ymin = rain - 2.58 * se, \n                      ymax = rain + 2.58*se), \n                      width=0.2, colour=\"black\", \n                      alpha=0.9, size=0.5) +\n       geom_point(aes(x = factor(Year), y = rain, \n             text = paste0(\"Year:\", `Year`, \n                          \"&lt;br&gt;Total Rainfall:\", round(rain, digits = 2),\n                          \"&lt;br&gt;95% CI:[\", \n                          round((rain - 2.58 * se), digits = 2), \",\",\n                          round((rain + 2.58 * se), digits = 2),\"]\")),\n             stat=\"identity\", color=\"darkred\", \n             size = 1.5, alpha = 1) +\n       geom_abline(slope = round(slope_coeff, 4), \n                   intercept = adjust_yintercept,\n                   untf = TRUE,\n                   color = \"blue\",\n                   linetype = \"dashed\")+\n       geom_text(aes(x = 11, y = 27.8, colour = \"blue\",\n                     label = paste0(\"Rainfall=\", \n                                    round(slope_coeff, 4), \"* Year \",\n                                    round(y_intercept, 4)))) +\n       labs (x = \"Year\", y = \"Annual mean temperatures (°C)\",\n             title = \"99% Confidence interval of annual total rainfall by year\",\n             subtitle = \"From 1982 to 2023\",\n             caption = \"Data from Meteorological Service Singapore website\") +\n       theme_minimal() + \n       theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1),\n             plot.title = element_text(face = \"bold\", size = 12))\n\nggplotly(gg, tooltip = \"text\") %&gt;%\n    layout(title = list(text = \n                        paste0(gg$labels$title, \"&lt;br&gt;\", \"&lt;sup&gt;\", \n                               gg$labels$subtitle, \"&lt;/sup&gt;\"),\n                        font = list(weight = \"bold\")),\n           showlegend = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can observe that the total rainfall over the years have increased and the confidence intervals have narrowed."
  },
  {
    "objectID": "EDA/EDA-Rainfall.html#rainfall-across-the-months",
    "href": "EDA/EDA-Rainfall.html#rainfall-across-the-months",
    "title": "Exploratory Data Analysis - Rainfall",
    "section": "4.4 Rainfall across the months",
    "text": "4.4 Rainfall across the months\n\n4.4.1 Box plot across the months\n\n\nShow the code\ngg &lt;- ggplot(rainfall, \n       aes(x = factor(Month, levels = month.abb), y = TotalRainfall)) +\n  geom_violin(color = \"navy\", fill = \"lightblue\") +\n  geom_hline(data = rainfall, \n             aes(yintercept = mean(TotalRainfall, na.rm = TRUE)),\n             linetype = \"dashed\", size = 1, colour = \"brown\") +\n  geom_text(aes(x = 4.5, y = 27.3, \n                 label = paste0(\"Total Rainfall : \", \n                                round(sum(TotalRainfall,na.rm = TRUE),2), \"mm\")), \n            colour = \"brown\") +\n  stat_summary(fun = mean, geom = \"point\", \n               shape = 20, size = 3, color = \"orange\",\n               aes(text = paste0(\"Total Rainfall : \",\n                                 round(after_stat(y), 2), \"mm\"))) +\n  theme_minimal() +\n  labs(title = \"Monthly Total Rainfall across each month from 1981 to 2023\",\n       subtitle = \"November to February are cooler as compared to the rest of the year\",\n        y = \"Total Rainfall (mm)\",\n        x = \"Month\",\n        caption = \"Data from Meteorological Service Singapore website\")\n\nggplotly(gg, tooltip = \"text\") %&gt;%\n    layout(title = list(text =\n                        paste0(gg$labels$title, \"&lt;br&gt;\", \"&lt;sup&gt;\",\n                               gg$labels$subtitle, \"&lt;/sup&gt;\"),\n                        font = list(weight = \"bold\")))\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can observe that temperature in November to February are below the average temperature.\n\n\n\n\n4.4.2 Heatmap across the months\n\n\nShow the code\nrain &lt;- rainfall %&gt;% \n        group_by(Year, Month) %&gt;% \n        summarise(TRain = sum(TotalRainfall, na.rm = TRUE))\n\ngg &lt;- ggplot(rain, aes(factor(Month, levels = month.abb), factor(Year), \n                          fill = TRain)) + \n    geom_tile(color = \"white\",\n              aes(text = paste0(Year, \"-\", Month,\n                                \"&lt;br&gt;Rainfall:\", round(TRain, 2), \"°C\"))) + \n    theme_minimal() + \n    scale_fill_gradient(name = \"Rainfall\",\n                        low = \"sky blue\", \n                        high = \"dark blue\") +\n    labs(x = NULL, y = NULL, \n         title = \"Total rainfall by year and month\",\n         subtitle = \"Hotter in more months of 2023 as compared to the other years\")\n\nggplotly(gg, tooltip = \"text\")\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can observe that temperature in May and June are consistently high across the years."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "The heat is on!  Singapore’s Race Against Climate Change",
    "section": "",
    "text": "Join us in our journey to analyse the weather conditions in Singapore and predict the weather in the next few years."
  },
  {
    "objectID": "Station/data/geospatial/MPSZ-2019.html",
    "href": "Station/data/geospatial/MPSZ-2019.html",
    "title": "The Heat is On!",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  }
]