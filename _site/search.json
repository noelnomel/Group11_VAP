[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "EDA/data/geospatial/MPSZ-2019.html",
    "href": "EDA/data/geospatial/MPSZ-2019.html",
    "title": "The Heat is On!",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "EDA/Data_Preparation.html",
    "href": "EDA/Data_Preparation.html",
    "title": "Data Preparation",
    "section": "",
    "text": "This page will explain in detail how we extract the data from the Meteorological Service Singapore (MSS) website and how we clean the data for our subsequent analysis."
  },
  {
    "objectID": "EDA/Data_Preparation.html#installing-r-packages",
    "href": "EDA/Data_Preparation.html#installing-r-packages",
    "title": "Data Preparation",
    "section": "3.1 Installing R packages",
    "text": "3.1 Installing R packages\nThe code below uses p_load() of the Pacman package to check if all the required packages are installed on the laptop. If they are, then they will be launched into the R environment.\n\n\n\nPackage\nDescription\n\n\ntidyverse\nA collection of core packages designed for data science used extensively for data preparation and wrangling.\n\n\nlubridate\nFor manipulating date-times.\n\n\njanitor\nFor quick formatting of data frame columns.\n\n\nfs\nFor retrieving a list of file names in our directory for import into R\n\n\n\n\npacman::p_load(readr, tidyverse, forecast, janitor, fs)\n\npackage 'TTR' successfully unpacked and MD5 sums checked\npackage 'quantmod' successfully unpacked and MD5 sums checked\npackage 'fracdiff' successfully unpacked and MD5 sums checked\npackage 'lmtest' successfully unpacked and MD5 sums checked\npackage 'timeDate' successfully unpacked and MD5 sums checked\npackage 'tseries' successfully unpacked and MD5 sums checked\npackage 'urca' successfully unpacked and MD5 sums checked\npackage 'forecast' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\noel1\\AppData\\Local\\Temp\\Rtmp27tPEU\\downloaded_packages"
  },
  {
    "objectID": "EDA/Data_Preparation.html#importing-data",
    "href": "EDA/Data_Preparation.html#importing-data",
    "title": "Data Preparation",
    "section": "3.2 Importing data",
    "text": "3.2 Importing data\nLet’s read all the 5552 CSV files downloaded for the 18 weather stations that have records from the year 1980 onwards.\n\nlocale argument in read_csv() is to specify the encoding as Latin-1, as some of the headers contain special characters, like the degree symbol (°). The Latin-1 encoding ensures R can read and process such special characters.\ncol_types argument imports all columns as character data type.\nclean_names() of the janitor package converts into snake case and transliterates special characters such as the degree symbol (°) to ASCII.\n\n\nfilenames &lt;- fs::dir_ls(\"data/raw_data/\") \n\n# Read all files and clean the column names\ndata &lt;- filenames %&gt;%\n    map_df(~ read_csv(.x, \n                      locale = locale(encoding = \"latin1\"),\n                      col_types = cols(.default = \"character\")\n                      ) %&gt;% \n             janitor::clean_names()\n    ) \n\nglimpse(data)\n\n\n\n\n\n\n\nNote\n\n\n\nAll the 18 weather stations have a total of 168,439 records.\nThe data shows that there are two sets of variables for mean, maximum, and minimum temperature records:\n\nmean_temperature_c, maximum_temperature_c, and minimum_temperature_c\nmean_temperature_a_c, maximum_temperature_a_c, and minimum_temperature_a_c\n\nSome year’s data are in the first set of variables and others are in the second set of variables. This might happen during clean_names() where there is a minor difference in the column names from different files.\n\n\nIt will be meaningful to also analyse weather data by regions in Singapore. Hence, we also searched for each weather station’s region on public websites like the HDB website and data.gov.sg. Let’s import the region information now.\n\nregion &lt;- read_csv(\"data/Region.csv\") \nglimpse(region)"
  },
  {
    "objectID": "EDA/Data_Preparation.html#data-wrangling",
    "href": "EDA/Data_Preparation.html#data-wrangling",
    "title": "Data Preparation",
    "section": "3.3 Data Wrangling",
    "text": "3.3 Data Wrangling\n\n3.3.1 Remove extra columns\nLet’s use the coalesce() function to copy the values from the second set of temperature values to the first set and then deselect the second set of columns. We are also not focusing on the wind speed variables, hence we will deselect the 2 variables on wind speed.\n\ndata$mean_temperature_c &lt;- coalesce(data$mean_temperature_c, \n                                    data$mean_temperature_a_c) \ndata$maximum_temperature_c &lt;- coalesce(data$maximum_temperature_c, \n                                       data$maximum_temperature_a_c)\ndata$minimum_temperature_c &lt;- coalesce(data$minimum_temperature_c,                                                                data$minimum_temperature_a_c)\n\ndata %&gt;% \n  select(-c(mean_temperature_a_c, \n            maximum_temperature_a_c, \n            minimum_temperature_a_c, \n            mean_wind_speed_km_h, \n            max_wind_speed_km_h))\n\nglimpse(data)\n\n\n\n3.3.2 Remove weird characters\nThere are some weird characters (‘097’) in the data frame. Let’s replace them with NA.\n\ndata &lt;- data %&gt;% \n  mutate_all(~ ifelse(. == \"\\u0097\", NA, .))\nglimpse(data)\n\n\n\n3.3.3 Tidy the data\nFinally, let’s clean up the weather data and create a column for date, change the necessary columns to numeric, and shorten the column names for simplicity.\n\nweather &lt;- data %&gt;% \n  mutate(station = station,\n       year = as.numeric(year),\n       Date = make_date(year = year, month = month, day = 1),\n       month = lubridate::month(Date, label = TRUE),         \n       day = as.numeric(day),\n       daily_rainfall_total_mm = as.numeric(daily_rainfall_total_mm), \n       highest_30_min_rainfall_mm = as.numeric(highest_30_min_rainfall_mm), \n       highest_60_min_rainfall_mm = as.numeric(highest_60_min_rainfall_mm),\n       highest_120_min_rainfall_mm = as.numeric(highest_120_min_rainfall_mm),\n       mean_temperature_c = as.numeric(mean_temperature_c), \n       maximum_temperature_c = as.numeric(maximum_temperature_c), \n       minimum_temperature_c = as.numeric(minimum_temperature_c)) %&gt;% \n  rename(\n    Station = station,\n    Year = year,\n    Month = month,\n    Day = day,\n    Rainfall = daily_rainfall_total_mm,\n    Rainfall30 = highest_30_min_rainfall_mm,\n    Rainfall60 = highest_60_min_rainfall_mm,\n    Rainfall120 = highest_120_min_rainfall_mm,\n    MeanTemperature = mean_temperature_c,\n    MaxTemperature = maximum_temperature_c,\n    MinTemperature = minimum_temperature_c\n  ) %&gt;% \n  subset(select = -c(mean_temperature_a_c,\n                     maximum_temperature_a_c,\n                     minimum_temperature_a_c, \n                     mean_wind_speed_km_h, \n                     max_wind_speed_km_h))\n\n\n\n3.3.4 Merge datasets\nLet’s join the weather data with its region information using the common variable ‘Station’.\n\nweather &lt;- merge(weather, region, by= \"Station\")\nglimpse(weather)\n\n\n\n3.3.5 Create subsets of data\nLet’s create subsets of weather data for only Temperature or Rainfall and save as RDS files for easy loading when we are developing for the subsequent analysis.\n\nTemp_YM &lt;- weather %&gt;% \n   group_by(Station, Region, Year, Month) %&gt;% \n   reframe(Date = Date,\n            MeanTemp = round(mean(MeanTemperature, na.rm = TRUE),1),\n            MaxTemp = round(max(MaxTemperature, na.rm = TRUE),1),\n            MinTemp = round(min(MinTemperature, na.rm = TRUE),1) ) %&gt;% \n   distinct() %&gt;% \n   ungroup() %&gt;% \n   filter(!is.na(MeanTemp))\n\nwrite_rds(Temp_YM, \"data/temperature.rds\")\n\nRainfall_YM &lt;- weather %&gt;% \n   group_by(Station, Region, Year, Month) %&gt;% \n   reframe(Date = Date,\n            TotalRainfall = round(sum(Rainfall, na.rm = TRUE),1),\n            TotalRainfall30 = round(sum(Rainfall30, na.rm = TRUE),1),\n            TotalRainfall60 = round(sum(Rainfall60, na.rm = TRUE),1),\n            TotalRainfall120 = round(sum(Rainfall120, na.rm = TRUE),1)) %&gt;% \n   distinct() %&gt;% \n   ungroup() %&gt;% \n   filter(!is.na(TotalRainfall))\n\nwrite_rds(Rainfall_YM, \"data/rainfall.rds\")"
  },
  {
    "objectID": "EDA/EDA_Noel.html",
    "href": "EDA/EDA_Noel.html",
    "title": "EDA_Noel",
    "section": "",
    "text": "pacman::p_load(tidyverse, ggdist, ggridges, heatmaply, ggiraph)\n\n\ntemperature &lt;- readRDS(\"data/temperature.rds\")\n\n\ntemp_avg &lt;- temperature %&gt;%\n  group_by(Station, Year) %&gt;%\n  summarise(Avg_Mean = mean(MeanTemp),\n            Avg_Max = mean(MaxTemp),\n            Avg_Min = mean(MinTemp))\n\n\ntime series - average of mean temperatures\n\nggplot(data = temp_avg,\n       aes(x = Year,\n           y = Avg_Mean,\n           group = Station,\n           color = Station)) +\n  geom_line(linewidth = 1.2) +\n  theme_classic() +\n  ylab(\"Daily Mean Temperature (°C)\") +\n  xlab(\"Day of Month\") +\n  ggtitle(\"Daily Mean Temperature Recorded At Tengah Weather Station\",\n          subtitle = \"September 1986, 1993, 2003, 2013, 2023\") +\n  theme(plot.title = element_text(size = 10),\n        plot.subtitle = element_text(size = 8)) \n\n\n\n\n\ntemp_avg$mean_tooltip &lt;- c(paste0(\n  \"Year: \", temp_avg$Year,\n  \"\\n Station: \", temp_avg$Station,\n  \"\\n Mean Temp: \", temp_avg$Avg_Mean, \"°C\"))\n\nline &lt;- ggplot(data = temp_avg,\n               aes(x = Year,\n                   y = Avg_Mean,\n                   group = Station,\n                   color = Station,\n                   data_id = Station)) +\n  geom_line_interactive(size = 1.2,\n                        alpha = 0.4) +\n  geom_point_interactive(aes(tooltip = temp_avg$mean_tooltip),\n                         fill = \"white\",\n                         size = 1,\n                         stroke = 1,\n                         shape = 21) +\n  theme_classic() +\n  ylab(\"Annual Mean Temperature (°C)\") +\n  xlab(\"Year\") +\n  ggtitle(\"Annual Average of Mean Temperatures\") +\n  theme(plot.title = element_text(size = 10),\n        plot.subtitle = element_text(size = 8)) \n\ngirafe(ggobj = line, \n       width_svg = 8,\n       height_svg = 6 * 0.618,\n       options = list(\n         opts_hover(css = \"stroke-width: 2.5; opacity: 1;\"),\n         opts_hover_inv(css = \"stroke-width: 1;opacity:0.6;\")))\n\n\n\n\n\n\n\ntime series - average of max temperatures\n\ntemp_avg$max_tooltip &lt;- c(paste0(\n  \"Year: \", temp_avg$Year,\n  \"\\n Station: \", temp_avg$Station,\n  \"\\n Max Temp: \", temp_avg$Avg_Max, \"°C\"))\n\nline &lt;- ggplot(data = temp_avg,\n               aes(x = Year,\n                   y = Avg_Max,\n                   group = Station,\n                   color = Station,\n                   data_id = Station)) +\n  geom_line_interactive(size = 1.2,\n                        alpha = 0.4) +\n  geom_point_interactive(aes(tooltip = temp_avg$max_tooltip),\n                         fill = \"white\",\n                         size = 1,\n                         stroke = 1,\n                         shape = 21) +\n  theme_classic() +\n  ylab(\"Annual Max Temperature (°C)\") +\n  xlab(\"Year\") +\n  ggtitle(\"Annual Average of Max Temperatures\") +\n  theme(plot.title = element_text(size = 10),\n        plot.subtitle = element_text(size = 8)) \n\ngirafe(ggobj = line, \n       width_svg = 8,\n       height_svg = 6 * 0.618,\n       options = list(\n         opts_hover(css = \"stroke-width: 2.5; opacity: 1;\"),\n         opts_hover_inv(css = \"stroke-width: 1;opacity:0.6;\")))\n\n\n\n\n\n\n\ntime series - average of min temperatures\n\ntemp_avg$min_tooltip &lt;- c(paste0(\n  \"Year: \", temp_avg$Year,\n  \"\\n Station: \", temp_avg$Station,\n  \"\\n Min Temp: \", temp_avg$Avg_Min, \"°C\"))\n\nline &lt;- ggplot(data = temp_avg,\n               aes(x = Year,\n                   y = Avg_Min,\n                   group = Station,\n                   color = Station,\n                   data_id = Station)) +\n  geom_line_interactive(size = 1.2,\n                        alpha = 0.4) +\n  geom_point_interactive(aes(tooltip = temp_avg$min_tooltip),\n                         fill = \"white\",\n                         size = 1,\n                         stroke = 1,\n                         shape = 21) +\n  theme_classic() +\n  ylab(\"Annual Min Temperature (°C)\") +\n  xlab(\"Year\") +\n  ggtitle(\"Annual Average of Min Temperatures\") +\n  theme(plot.title = element_text(size = 10),\n        plot.subtitle = element_text(size = 8)) \n\ngirafe(ggobj = line, \n       width_svg = 8,\n       height_svg = 6 * 0.618,\n       options = list(\n         opts_hover(css = \"stroke-width: 2.5; opacity: 1;\"),\n         opts_hover_inv(css = \"stroke-width: 1;opacity:0.6;\")))"
  },
  {
    "objectID": "EDA/EDA_Vanessa.html",
    "href": "EDA/EDA_Vanessa.html",
    "title": "EDA_Vanessa",
    "section": "",
    "text": "pacman::p_load(tidyverse, ggstatsplot, plotly, ggplot2, ggdist, dplyr)\n\n\nweather_list &lt;- list.files(path = \"WeatherStation_Cleaned\",\n                               recursive = TRUE,\n                               pattern = \"\\\\.csv$\",\n                               full.names = TRUE)\n\nweather &lt;- read_csv(weather_list)\n\nweather &lt;- weather %&gt;% \n          select(1:13, \"DailyRainfall\" = 5, \"HighestRainfall30\" = 6,\n                 \"HighestRainfall60\" = 7, \"HighestRainfall120\" = 8,\n                 \"MeanTemp\" = 9, \"MaxTemp\" = 10, \"MinTemp\" = 11,\n                 \"MeanWindSpeed\" = 12, \"MaxWindSpeed\" = 13)\n\n\nweather &lt;- readRDS(\"data/weather.rds\")\n\nweather &lt;- weather %&gt;% \n          select(1:13, \"DailyRainfall\" = 5, \"HighestRainfall30\" = 6,\n                 \"HighestRainfall60\" = 7, \"HighestRainfall120\" = 8,\n                 \"MeanTemp\" = 9, \"MaxTemp\" = 10, \"MinTemp\" = 11,\n                 \"MeanWindSpeed\" = 12, \"MaxWindSpeed\" = 13)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather$Year &lt;- as.integer(weather$Year)\nweather$Month &lt;- month.abb[weather$Month]\nweather$Day &lt;- as.integer(weather$Day)\nweather$DailyRainfall &lt;- as.numeric(weather$DailyRainfall)\n\nWarning: NAs introduced by coercion\n\nweather$HighestRainfall30 &lt;- as.numeric(weather$HighestRainfall30)\n\nWarning: NAs introduced by coercion\n\nweather$HighestRainfall60 &lt;- as.numeric(weather$HighestRainfall60)\n\nWarning: NAs introduced by coercion\n\nweather$HighestRainfall120 &lt;- as.numeric(weather$HighestRainfall120)\n\nWarning: NAs introduced by coercion\n\nweather$MeanTemp &lt;- as.numeric(weather$MeanTemp)\n\nWarning: NAs introduced by coercion\n\nweather$MaxTemp &lt;- as.numeric(weather$MaxTemp)\n\nWarning: NAs introduced by coercion\n\nweather$MinTemp &lt;- as.numeric(weather$MinTemp)\n\nWarning: NAs introduced by coercion\n\nweather$MeanWindSpeed &lt;- as.numeric(weather$MeanWindSpeed)\n\nWarning: NAs introduced by coercion\n\nweather$MaxWindSpeed &lt;- as.numeric(weather$MaxWindSpeed)\n\nWarning: NAs introduced by coercion\n\nglimpse(weather)\n\nRows: 168,836\nColumns: 13\n$ Station            &lt;chr&gt; \"Admiralty\", \"Admiralty\", \"Admiralty\", \"Admiralty\",…\n$ Year               &lt;int&gt; 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 200…\n$ Month              &lt;chr&gt; \"Jan\", \"Jan\", \"Jan\", \"Jan\", \"Jan\", \"Jan\", \"Jan\", \"J…\n$ Day                &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, …\n$ DailyRainfall      &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ HighestRainfall30  &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ HighestRainfall60  &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ HighestRainfall120 &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ MeanTemp           &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ MaxTemp            &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ MinTemp            &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ MeanWindSpeed      &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ MaxWindSpeed       &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n\n:::\n\nweather$DDate &lt;- as.Date(paste(weather$Year, \n                                weather$Month, \n                                weather$Day, sep = \"-\"), \n                              format = \"%Y-%b-%d\")\n\nTemp_month &lt;- weather %&gt;% \n                group_by(Station, Year, Month) %&gt;% \n                summarise(AveMeanTemp = mean(MeanTemp, na.rm = TRUE),\n                          MaxMaxTemp = max(MaxTemp),\n                          MinMinTemp = min(MinTemp))\n\n`summarise()` has grouped output by 'Station', 'Year'. You can override using\nthe `.groups` argument.\n\nTemp_monthYr &lt;- Temp_month %&gt;% \n  mutate(MonthOfYear = match(Month, month.abb) + (Year - 1981) * 12 ) \n\nTemp_yr_error &lt;- weather %&gt;%\n  group_by(Year) %&gt;%\n  summarise(n = n(), Temp = mean(MeanTemp, na.rm = TRUE), \n            sd = sd(MeanTemp, na.rm = TRUE)) %&gt;%\n  mutate(se = sd/sqrt(n-1))\n\n\nTemp &lt;- Temp_monthYr %&gt;% \n  filter(Station == 'Changi')\ngg &lt;- ggplot(Temp, aes(x = MonthOfYear, y = AveMeanTemp, \n                         color = factor(Year))) +\n    geom_line(linewidth = 0.1) +\n    geom_point(aes(text = paste0(\"Month:\", Month, \n                                \"&lt;br&gt;MeanTemp:\", AveMeanTemp, \"ºC\"))) +\n    scale_x_continuous(breaks = seq(from = 1, by = 120, length.out = 42),\n                labels = seq(from = 1981, by = 10, length.out = 42)) +\n    labs(x = \"Year\", y = \"Monthly mean temperature (ºC)\", color = \"Year\",\n         title = \"Trend of Monthly Mean Temperature at Changi Station from 1981 to 2023\", \n         subtitle = \"Gentle trend line sloping upwards from 1981\",\n         caption = \"Data from Meteorological Service Singapore website\") +\n    geom_smooth(method = \"lm\", formula = y ~ splines::bs(x, 3), \n                se = FALSE, color = \"black\") +\n    theme_minimal() \n\nWarning in geom_point(aes(text = paste0(\"Month:\", Month, \"&lt;br&gt;MeanTemp:\", :\nIgnoring unknown aesthetics: text\n\nggplotly(gg, tooltip = \"text\") %&gt;%\n    layout(title = list(text = \n                        paste0(gg$labels$title, \"&lt;br&gt;\", \"&lt;sup&gt;\", \n                               gg$labels$subtitle, \"&lt;/sup&gt;\"),\n                        font = list(weight = \"bold\")),\n           showlegend = FALSE,\n    annotations = list(text = gg$labels$caption,\n                      xref = \"paper\", yref = \"paper\",\n                      x = 1000, y = 24,\n                      xanchor = \"right\", yanchor = \"top\",\n                      showarrow = FALSE)) \n\nWarning: Removed 24 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\n\n\n\n\n\nmodel &lt;- lm(Temp ~ Year, Temp_yr_error)\ny_intercept = coef(model)[1] \nslope_coeff = coef(model)[2]\nadjust_yintercept = slope_coeff * 1982 + y_intercept\n\ngg &lt;- ggplot(Temp_yr_error) +\n       geom_errorbar(aes(x = factor(Year), ymin = Temp - 2.58 * se, \n                      ymax = Temp+2.58*se), \n                      width=0.2, colour=\"black\", \n                      alpha=0.9, size=0.5) +\n       geom_point(aes(x = factor(Year), y = Temp, \n             text = paste0(\"Year:\", `Year`, \n                          \"&lt;br&gt;Avg. Temp:\", round(Temp, digits = 2),\n                          \"&lt;br&gt;95% CI:[\", \n                          round((Temp - 2.58 * se), digits = 2), \",\",\n                          round((Temp + 2.58 * se), digits = 2),\"]\")),\n             stat=\"identity\", color=\"darkred\", \n             size = 1.5, alpha = 1) +\n       geom_abline(slope = round(slope_coeff, 4), \n                   intercept = adjust_yintercept,\n                   untf = TRUE,\n                   color = \"blue\",\n                   linetype = \"dashed\")+\n       geom_text(aes(x = 11, y = 27.8, colour = \"blue\",\n                     label = paste0(\"Temp=\", \n                                    round(slope_coeff, 4), \"* Year \",\n                                    round(y_intercept, 4)))) +\n       labs (x = \"Year\", y = \"Annual mean temperatures (°C)\",\n             title = \"99% Confidence interval of annual mean temperatures by year\",\n             subtitle = \"From 1982 to 2023\",\n             caption = \"Data from Meteorological Service Singapore website\") +\n       theme_minimal() + \n       theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1),\n             plot.title = element_text(face = \"bold\", size = 12))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning in geom_point(aes(x = factor(Year), y = Temp, text = paste0(\"Year:\", :\nIgnoring unknown aesthetics: text\n\n\nWarning in geom_abline(slope = round(slope_coeff, 4), intercept =\nadjust_yintercept, : Ignoring unknown parameters: `untf`\n\nggplotly(gg, tooltip = \"text\") %&gt;%\n    layout(title = list(text = \n                        paste0(gg$labels$title, \"&lt;br&gt;\", \"&lt;sup&gt;\", \n                               gg$labels$subtitle, \"&lt;/sup&gt;\"),\n                        font = list(weight = \"bold\")),\n           showlegend = FALSE)\n\nWarning in geom_text(aes(x = 11, y = 27.8, colour = \"blue\", label = paste0(\"Temp=\", : All aesthetics have length 1, but the data has 44 rows.\nℹ Did you mean to use `annotate()`?\n\n\n\n\n\n\n\nTemp &lt;- Temp_month %&gt;% \n        group_by(Year, Month) %&gt;% \n        summarise(MTemp = mean(AveMeanTemp, na.rm = TRUE))\n\n`summarise()` has grouped output by 'Year'. You can override using the\n`.groups` argument.\n\ngg &lt;- ggplot(Temp, aes(factor(Month, levels = month.abb), factor(Year), \n                          fill = MTemp)) + \n    geom_tile(color = \"white\",\n              aes(text = paste0(Year, \"-\", Month,\n                                \"&lt;br&gt;Temp:\", round(MTemp, 2), \"°C\"))) + \n    theme_minimal() + \n    scale_fill_gradient(name = \"Temperature\",\n                        low = \"sky blue\", \n                        high = \"dark blue\") +\n    labs(x = NULL, y = NULL, \n         title = \"Mean temperatures by year and month\",\n         subtitle = \"Hotter in more months of 2023 as compared to the other years\")\n\nWarning in geom_tile(color = \"white\", aes(text = paste0(Year, \"-\", Month, :\nIgnoring unknown aesthetics: text\n\nggplotly(gg, tooltip = \"text\")\n\n\n\n\n\n\n\nShow the code\ngg &lt;- ggplot(weather, \n       aes(x = factor(Month, levels = month.abb), y = MeanTemp)) +\n  geom_violin(color = \"navy\", fill = \"lightblue\") +\n  geom_hline(data = weather, \n             aes(yintercept = mean(MeanTemp, na.rm = TRUE)),\n             linetype = \"dashed\", size = 1, colour = \"brown\") +\n  geom_text(aes(x = 4.5, y = 27.3, \n                 label = paste0(\"Mean : \", \n                                round(mean(MeanTemp,na.rm = TRUE),2), \"°C\")), \n            colour = \"brown\") +\n  stat_summary(fun = mean, geom = \"point\", \n               shape = 20, size = 3, color = \"orange\",\n               aes(text = paste0(\"Mean : \", round(after_stat(y), 2), \"°C\"))) +\n  theme_minimal() +\n  labs(title = \"Daily mean temperature across each month from 1981 to 2023\",\n       subtitle = \"November to February are cooler as compared to the rest of the year\",\n        y = \"Daily mean Temperatures (°C)\",\n        x = \"Month\",\n        caption = \"Data from Meteorological Service Singapore website\")\n\n\nWarning in stat_summary(fun = mean, geom = \"point\", shape = 20, size = 3, :\nIgnoring unknown aesthetics: text\n\n\nShow the code\nggplotly(gg, tooltip = \"text\") %&gt;%\n    layout(title = list(text =\n                        paste0(gg$labels$title, \"&lt;br&gt;\", \"&lt;sup&gt;\",\n                               gg$labels$subtitle, \"&lt;/sup&gt;\"),\n                        font = list(weight = \"bold\")))\n\n\nWarning in geom_text(aes(x = 4.5, y = 27.3, label = paste0(\"Mean : \", round(mean(MeanTemp, : All aesthetics have length 1, but the data has 168836 rows.\nℹ Did you mean to use `annotate()`?\n\n\nWarning: Removed 59558 rows containing non-finite outside the scale range\n(`stat_ydensity()`).\n\n\nWarning: Removed 59558 rows containing non-finite outside the scale range\n(`stat_summary()`)."
  },
  {
    "objectID": "EDA/EDA_Wankee.html",
    "href": "EDA/EDA_Wankee.html",
    "title": "EDA_Wankee",
    "section": "",
    "text": "1. Import Packages\n\npacman::p_load(tidyverse, readr, psych, st, stars, tmap)\n\n\nweather_list &lt;- list.files(path = \"data\",\n                           recursive = TRUE,\n                           pattern = \"\\\\.csv$\",\n                           full.names = TRUE)\nlist(weather_list)\n\n[[1]]\n [1] \"data/aspatial/Admiralty.csv\"            \n [2] \"data/aspatial/Ang Mo Kio.csv\"           \n [3] \"data/aspatial/Boon Lay (East).csv\"      \n [4] \"data/aspatial/Changi.csv\"               \n [5] \"data/aspatial/Choa Chu Kang (South).csv\"\n [6] \"data/aspatial/Clementi.csv\"             \n [7] \"data/aspatial/East Coast Parkway.csv\"   \n [8] \"data/aspatial/Jurong (West).csv\"        \n [9] \"data/aspatial/Khatib.csv\"               \n[10] \"data/aspatial/Marina Barrage.csv\"       \n[11] \"data/aspatial/Newton.csv\"               \n[12] \"data/aspatial/Pasir Panjang.csv\"        \n[13] \"data/aspatial/Paya Lebar.csv\"           \n[14] \"data/aspatial/Seletar.csv\"              \n[15] \"data/aspatial/Sembawang.csv\"            \n[16] \"data/aspatial/Tai Seng.csv\"             \n[17] \"data/aspatial/Tengah.csv\"               \n[18] \"data/aspatial/Tuas South.csv\"           \n\n\n\nweather &lt;- read_csv(weather_list)\n\nweather &lt;- weather %&gt;%\n  rename_with(~ gsub(\" \", \"_\", .x), everything())\n\nglimpse(weather)\n\nRows: 168,836\nColumns: 13\n$ Station                  &lt;chr&gt; \"Admiralty\", \"Admiralty\", \"Admiralty\", \"Admir…\n$ Year                     &lt;dbl&gt; 2009, 2009, 2009, 2009, 2009, 2009, 2009, 200…\n$ Month                    &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ Day                      &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14…\n$ Daily_Rainfall_Total     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ Highest_30_Min_Rainfall  &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ Highest_60_Min_Rainfall  &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ Highest_120_Min_Rainfall &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ Mean_Temperature         &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ Maximum_Temperature      &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ Minimum_Temperature      &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ Mean_Wind_Speed          &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ Max_Wind_Speed           &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n\n\n\ndescribe(weather)\n\n                          vars      n    mean     sd median trimmed   mad  min\nStation*                     1 168836   10.51   5.02     12   10.69  5.93    1\nYear                         2 168836 2006.25  12.34   2010 2007.10 13.34 1980\nMonth                        3 168836    6.54   3.45      7    6.55  4.45    1\nDay                          4 168836   15.73   8.80     16   15.72 11.86    1\nDaily_Rainfall_Total*        5 167188  210.70 322.45      4  145.27  2.97    1\nHighest_30_Min_Rainfall*     6  51716   70.59 123.67      3   40.26  1.48    1\nHighest_60_Min_Rainfall*     7  51683   80.76 140.96      3   46.24  1.48    1\nHighest_120_Min_Rainfall*    8  51686   91.24 153.54      3   54.96  1.48    1\nMean_Temperature*            9 109321   56.07  12.31     56   56.29 13.34    1\nMaximum_Temperature*        10 128383   89.37  17.25     92   90.62 14.83    1\nMinimum_Temperature*        11 128336   54.13  14.39     53   53.54 14.83    1\nMean_Wind_Speed*            12 128355  186.14  87.96    229  196.52 34.10    1\nMax_Wind_Speed*             13  93405  208.43  75.11    202  206.25 75.61    1\n                           max range  skew kurtosis   se\nStation*                    18    17 -0.24    -1.27 0.01\nYear                      2023    43 -0.50    -0.99 0.03\nMonth                       12    11 -0.01    -1.21 0.01\nDay                         31    30  0.01    -1.19 0.02\nDaily_Rainfall_Total*     1283  1282  1.37     0.72 0.79\nHighest_30_Min_Rainfall*   435   434  1.77     1.81 0.54\nHighest_60_Min_Rainfall*   555   554  1.88     2.49 0.62\nHighest_120_Min_Rainfall*  622   621  1.78     2.15 0.68\nMean_Temperature*           96    95 -0.22     0.03 0.04\nMaximum_Temperature*       143   142 -0.83     1.29 0.05\nMinimum_Temperature*       105   104  0.34    -0.18 0.04\nMean_Wind_Speed*           271   270 -0.98    -0.80 0.25\nMax_Wind_Speed*            524   523  0.31     0.09 0.25\n\n\n\n\n\n\n\n\nSave rds\n\n\n\n\n\n\nwrite_rds(weather, \"data/weather.rds\")\n\n\n\n\n\n\n\n\n\n\nLoad rds\n\n\n\n\n\n\nweather &lt;- readRDS(\"data/weather.rds\")\n\n\n\n\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", layer = \"MPSZ-2019\") %&gt;% \n  st_transform(crs=3414)\n\nReading layer `MPSZ-2019' from data source \n  `C:\\Vanessa\\SMU\\Term 4 - Visual Analytics & Applications\\mvheng\\Group11_VAP\\EDA\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\nglimpse(mpsz)\n\nRows: 332\nColumns: 7\n$ SUBZONE_N  &lt;chr&gt; \"MARINA EAST\", \"INSTITUTION HILL\", \"ROBERTSON QUAY\", \"JURON…\n$ SUBZONE_C  &lt;chr&gt; \"MESZ01\", \"RVSZ05\", \"SRSZ01\", \"WISZ01\", \"MUSZ02\", \"MPSZ05\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA EAST\", \"RIVER VALLEY\", \"SINGAPORE RIVER\", \"WESTERN …\n$ PLN_AREA_C &lt;chr&gt; \"ME\", \"RV\", \"SR\", \"WI\", \"MU\", \"MP\", \"WI\", \"WI\", \"SI\", \"SI\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"WEST…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"WR\", \"CR\", \"CR\", \"WR\", \"WR\", \"CR\", \"CR\",…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((33222.98 29..., MULTIPOLYGON (…\n\n\n\ntmap_mode(\"view\")\n\ntm_shape(mpsz) +\n  tm_polygons(col = \"REGION_N\", palette = \"Set2\")+\n  tm_layout(main.title = \"Planning Area\",\n            main.title.position = \"left\",\n            main.title.size = 1,\n            legend.show = FALSE,\n            frame = FALSE) +\n  tmap_options(check.and.fix = TRUE) +\n  tm_view(set.zoom.limits = c(11,12))\n\n\n\n\n\n\n\ntmap_mode(\"view\")\n\ntm_shape(mpsz) +\n  tm_polygons(col = \"PLN_AREA_C\", palette = \"Set2\")+\n  tm_layout(main.title = \"Planning Area\",\n            main.title.position = \"left\",\n            main.title.size = 1,\n            legend.show = FALSE,\n            frame = FALSE) +\n  tm_view(set.zoom.limits = c(11,12))\n\n\n\n\n\n\n\ntmap_mode(\"view\")\n\ntm_shape(mpsz) +\n  tm_polygons(col = \"SUBZONE_N\", palette = \"Set2\")+\n  tm_layout(main.title = \"Planning Area\",\n            main.title.position = \"left\",\n            main.title.size = 1,\n            legend.show = FALSE,\n            frame = FALSE) +\n  tm_view(set.zoom.limits = c(11,12))\n\n\n\n\n\n\n\nunique(mpsz$PLN_AREA_N)\n\n [1] \"MARINA EAST\"             \"RIVER VALLEY\"           \n [3] \"SINGAPORE RIVER\"         \"WESTERN ISLANDS\"        \n [5] \"MUSEUM\"                  \"MARINE PARADE\"          \n [7] \"SOUTHERN ISLANDS\"        \"BUKIT MERAH\"            \n [9] \"DOWNTOWN CORE\"           \"STRAITS VIEW\"           \n[11] \"QUEENSTOWN\"              \"OUTRAM\"                 \n[13] \"MARINA SOUTH\"            \"ROCHOR\"                 \n[15] \"KALLANG\"                 \"TANGLIN\"                \n[17] \"NEWTON\"                  \"CLEMENTI\"               \n[19] \"BEDOK\"                   \"PIONEER\"                \n[21] \"JURONG EAST\"             \"ORCHARD\"                \n[23] \"GEYLANG\"                 \"BOON LAY\"               \n[25] \"BUKIT TIMAH\"             \"NOVENA\"                 \n[27] \"TOA PAYOH\"               \"TUAS\"                   \n[29] \"JURONG WEST\"             \"SERANGOON\"              \n[31] \"BISHAN\"                  \"TAMPINES\"               \n[33] \"BUKIT BATOK\"             \"HOUGANG\"                \n[35] \"CHANGI BAY\"              \"PAYA LEBAR\"             \n[37] \"ANG MO KIO\"              \"PASIR RIS\"              \n[39] \"BUKIT PANJANG\"           \"TENGAH\"                 \n[41] \"SELETAR\"                 \"SUNGEI KADUT\"           \n[43] \"YISHUN\"                  \"MANDAI\"                 \n[45] \"PUNGGOL\"                 \"CHOA CHU KANG\"          \n[47] \"SENGKANG\"                \"CHANGI\"                 \n[49] \"CENTRAL WATER CATCHMENT\" \"SEMBAWANG\"              \n[51] \"WESTERN WATER CATCHMENT\" \"WOODLANDS\"              \n[53] \"NORTH-EASTERN ISLANDS\"   \"SIMPANG\"                \n[55] \"LIM CHU KANG\"           \n\n\n\nunique(weather$Station)\n\n [1] \"Admiralty\"             \"Ang Mo Kio\"            \"Boon Lay (East)\"      \n [4] \"Changi\"                \"Choa Chu Kang (South)\" \"Clementi\"             \n [7] \"East Coast Parkway\"    \"Jurong (West)\"         \"Khatib\"               \n[10] \"Marina Barrage\"        \"Newton\"                \"Pasir Panjang\"        \n[13] \"Paya Lebar\"            \"Seletar\"               \"Sembawang\"            \n[16] \"Tai Seng\"              \"Tengah\"                \"Tuas South\"           \n\n\n\nstation_to_PA &lt;- c(\n  \"Admiralty\" = \"WOODLANDS\",\n  \"Ang Mo Kio\" = \"ANG MO KIO\",\n  \"Boon Lay (East)\" = \"BOON LAY\",\n  \"Changi\" = \"CHANGI\",\n  \"Choa Chu Kang (South)\" = \"CHOA CHU KANG\",\n  \"Clementi\" = \"CLEMENTI\",\n  \"East Coast Parkway\" = \"BEDOK\",\n  \"Jurong (West)\" = \"JURONG WEST\",\n  \"Khatib\" = \"YISHUN\",\n  \"Marina Barrage\" = \"DOWNTOWN CORE\",\n  \"Newton\" = \"NEWTON\",\n  \"Pasir Panjang\" = \"PASIR PANJANG\",\n  \"Paya Lebar\" = \"PAYA LEBAR\",\n  \"Seletar\" = \"SELETAR\",\n  \"Sembawang\" = \"SEMBAWANG\",\n  \"Tai Seng\" = \"HOUGANG\",\n  \"Tengah\" = \"TENGAH\",\n  \"Tuas South\" = \"TUAS\"\n)\n\nweather$PA &lt;- station_to_PA[weather$Station]\nweather &lt;- weather[, c(\"PA\", setdiff(names(weather), \"PA\"))]\nhead(weather)\n\n# A tibble: 6 × 14\n  PA       Station  Year Month   Day Daily_Rainfall_Total Highest_30_Min_Rainf…¹\n  &lt;chr&gt;    &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;                &lt;chr&gt;                 \n1 WOODLAN… Admira…  2009     1     1 &lt;NA&gt;                 &lt;NA&gt;                  \n2 WOODLAN… Admira…  2009     1     2 &lt;NA&gt;                 &lt;NA&gt;                  \n3 WOODLAN… Admira…  2009     1     3 &lt;NA&gt;                 &lt;NA&gt;                  \n4 WOODLAN… Admira…  2009     1     4 &lt;NA&gt;                 &lt;NA&gt;                  \n5 WOODLAN… Admira…  2009     1     5 &lt;NA&gt;                 &lt;NA&gt;                  \n6 WOODLAN… Admira…  2009     1     6 &lt;NA&gt;                 &lt;NA&gt;                  \n# ℹ abbreviated name: ¹​Highest_30_Min_Rainfall\n# ℹ 7 more variables: Highest_60_Min_Rainfall &lt;chr&gt;,\n#   Highest_120_Min_Rainfall &lt;chr&gt;, Mean_Temperature &lt;chr&gt;,\n#   Maximum_Temperature &lt;chr&gt;, Minimum_Temperature &lt;chr&gt;,\n#   Mean_Wind_Speed &lt;chr&gt;, Max_Wind_Speed &lt;chr&gt;\n\n\n\nweather &lt;- weather %&gt;%\n  mutate_at(vars(Daily_Rainfall_Total,\n                 Highest_30_Min_Rainfall,\n                 Highest_60_Min_Rainfall,\n                 Highest_120_Min_Rainfall,\n                 Mean_Temperature,\n                 Maximum_Temperature),\n            as.numeric)\n\n\nweather$Daily_Rainfall_Total &lt;- as.numeric(weather$Daily_Rainfall_Total)\nweather$Highest_30_Min_Rainfall &lt;- as.numeric(weather$Highest_30_Min_Rainfall)\nweather$Highest_60_Min_Rainfall &lt;- as.numeric(weather$Highest_60_Min_Rainfall)\nweather$Highest_120_Min_Rainfall &lt;- as.numeric(weather$Highest_120_Min_Rainfall)\nweather$Mean_Temperature &lt;- as.numeric(weather$Mean_Temperature)\nweather$Maximum_Temperature &lt;- as.numeric(weather$Maximum_Temperature)\nweather$Minimum_Temperature &lt;- as.numeric(weather$Minimum_Temperature)\n\n\nweather_map &lt;- weather %&gt;% \n  group_by(PA, Station, Year) %&gt;% \n  summarise(Annual_Rainfall_Total = sum(Daily_Rainfall_Total, na.rm = TRUE),\n            Annual_Highest_30_Min_Rainfall = sum(Highest_30_Min_Rainfall, na.rm = TRUE),\n            Annual_Highest_60_Min_Rainfall = sum(Highest_60_Min_Rainfall, na.rm = TRUE),\n            Annual_Highest_120_Min_Rainfall = sum(Highest_120_Min_Rainfall, na.rm = TRUE),\n            Annual_Mean_Temperature = sum(Mean_Temperature, na.rm = TRUE),\n            Annual_Maximum_Temperature = sum(Maximum_Temperature, na.rm = TRUE),\n            Annual_Minimum_Temperature = sum(Minimum_Temperature, na.rm = TRUE)) %&gt;%\n  ungroup()\n\nglimpse(weather_map)\n\nRows: 469\nColumns: 10\n$ PA                              &lt;chr&gt; \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KI…\n$ Station                         &lt;chr&gt; \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Ki…\n$ Year                            &lt;dbl&gt; 2009, 2010, 2011, 2012, 2013, 2014, 20…\n$ Annual_Rainfall_Total           &lt;dbl&gt; 830.6, 2849.2, 3050.4, 2579.6, 3240.0,…\n$ Annual_Highest_30_Min_Rainfall  &lt;dbl&gt; 0.0, 0.0, 0.0, 0.0, 0.0, 1257.2, 1387.…\n$ Annual_Highest_60_Min_Rainfall  &lt;dbl&gt; 0.0, 0.0, 0.0, 0.0, 0.0, 1527.0, 1668.…\n$ Annual_Highest_120_Min_Rainfall &lt;dbl&gt; 0.0, 0.0, 0.0, 0.0, 0.0, 1703.8, 1834.…\n$ Annual_Mean_Temperature         &lt;dbl&gt; 3013.9, 9979.3, 9967.5, 10067.6, 10069…\n$ Annual_Maximum_Temperature      &lt;dbl&gt; 3623.6, 11641.2, 11411.1, 11561.3, 115…\n$ Annual_Minimum_Temperature      &lt;dbl&gt; 2865.4, 9036.9, 9012.8, 9096.7, 9038.9…\n\n\n\nmpszweather &lt;- left_join(mpsz, weather_map,\n                         by = c(\"PLN_AREA_N\" = \"PA\"))\nglimpse(mpszweather)\n\nRows: 3,485\nColumns: 16\n$ SUBZONE_N                       &lt;chr&gt; \"MARINA EAST\", \"INSTITUTION HILL\", \"RO…\n$ SUBZONE_C                       &lt;chr&gt; \"MESZ01\", \"RVSZ05\", \"SRSZ01\", \"WISZ01\"…\n$ PLN_AREA_N                      &lt;chr&gt; \"MARINA EAST\", \"RIVER VALLEY\", \"SINGAP…\n$ PLN_AREA_C                      &lt;chr&gt; \"ME\", \"RV\", \"SR\", \"WI\", \"MU\", \"MP\", \"W…\n$ REGION_N                        &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"C…\n$ REGION_C                        &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"WR\", \"CR\", \"CR\", \"W…\n$ Station                         &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Year                            &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Annual_Rainfall_Total           &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Annual_Highest_30_Min_Rainfall  &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Annual_Highest_60_Min_Rainfall  &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Annual_Highest_120_Min_Rainfall &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Annual_Mean_Temperature         &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Annual_Maximum_Temperature      &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Annual_Minimum_Temperature      &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ geometry                        &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((33222.98 …\n\n\n\ntm_shape(mpszweather) +\n  tm_polygons(col = \"Annual_Rainfall_Total\", \n              palette = \"Blues\", \n              style = \"jenks\") +\n  tm_view(set.zoom.limits = c(11,12))\n\n\n\n\n\n\n\ntm_shape(mpszweather) +\n  tm_polygons(col = \"Annual_Highest_30_Min_Rainfall\", \n              palette = \"Blues\", \n              style = \"jenks\") +\n  tm_view(set.zoom.limits = c(11,12))\n\n\n\n\n\n\n\ntm_shape(mpszweather) +\n  tm_polygons(col = \"Annual_Mean_Temperature\", \n              palette = \"Oranges\", \n              style = \"jenks\") +\n  tm_view(set.zoom.limits = c(11,12))\n\n\n\n\n\n\n\ntm_shape(mpszweather) +\n  tm_polygons(col = \"Annual_Maximum_Temperature\", \n              palette = \"Oranges\", \n              style = \"jenks\") +\n  tm_view(set.zoom.limits = c(11,12))\n\n\n\n\n\n\n\ntm_shape(mpszweather) +\n  tm_polygons(col = \"Annual_Minimum_Temperature\", \n              palette = \"Oranges\", \n              style = \"jenks\") +\n  tm_view(set.zoom.limits = c(11,12))"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Singapore’s Race Against Climate Change",
    "section": "",
    "text": "This is Group 11’s Visual Analytics Project Site."
  },
  {
    "objectID": "proposal/proposal.html",
    "href": "proposal/proposal.html",
    "title": "Project Proposal",
    "section": "",
    "text": "Source: Today Online"
  },
  {
    "objectID": "proposal/proposal.html#exploratory-data-analysis-and-visualizations",
    "href": "proposal/proposal.html#exploratory-data-analysis-and-visualizations",
    "title": "Project Proposal",
    "section": "4.1. Exploratory Data Analysis and Visualizations",
    "text": "4.1. Exploratory Data Analysis and Visualizations\nFirstly, our exploratory data analysis will uncover trends in Singapore’s historical climate data through a range of visualizations to convey our finding effectively:\n\nTime series analysis utilizes time-dependent decomposition to discern the variations, trends and anomalies in the climate data across the periods\nComparative analysis using box plots and violin plots to highlight the differences in climate data across periods or locations • Heatmap to plot changes in climate data by periods\nDistribution analysis through ridgeline plots to show the distribution of climate data by specific periods or locations\nCorrelation matrix between climate data to investigate the inter dependencies between the climate data\nInteractive maps to show geographical impacts of climate change, such as potential flooding areas and urban heat issues.\n\nThe visualizations will be created using R packages;ggplot2 for foundational graphics, extensions such as ggridges for ridgeline plots, ggthemes and patchwork for styling and layouts. Interactive graphics will be incorporated using ggiraph and plotly and the animations produced via gganimate.\nInteractivity can be included in the visualizations, such as coordinated multiple views to show temperature and rainfall data side-by-side. Animations can be used to showcase changes in temperature and rainfall over the years."
  },
  {
    "objectID": "proposal/proposal.html#predictive-model",
    "href": "proposal/proposal.html#predictive-model",
    "title": "Project Proposal",
    "section": "4.2. Predictive Model",
    "text": "4.2. Predictive Model\nWe aim to forecast future climate trends by exploring a suite of time series forecasting models:\n\nTime series forecasting is the process of using historical data to predict future values of a variable that changes over time. It is a common and useful technique for weather prediction.  There are many types of models for time series forecasting, such as exponential smoothing, ARIMA, SARIMA, VAR and neural networks.\nMachine learning approaches, such as Random Forest and Gradient Boosting Machines, for non-linear trend capturing.\n\nWe will compare and evaluate different models based on their predictive performance in terms of accuracy, precision and recall using evaluation metrics such as cross-validation, AIC and BIC, and forecasting accuracy measures using RMSE. The interpretability of models will also be a key consideration to ensure that the findings are understandable to the public (Figure 2).\nFigure 2 is a prototype of RShiny application."
  },
  {
    "objectID": "proposal/proposal.html#footnotes",
    "href": "proposal/proposal.html#footnotes",
    "title": "Project Proposal",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nhttps://www.ipcc.ch/report/ar6/syr/downloads/report/IPCC_AR6_SYR_SPM.pdf↩︎\nhttps://www.nccs.gov.sg/singapores-climate-action/impact-of-climate-change-in-singapore/↩︎\nhttps://www.mse.gov.sg/policies/climate-change#:~:text=Understanding%20Climate%20Change&text=A%20warmer%20climate%20leads%20to,more%20frequent%20extreme%20weather%20events.↩︎\nhttps://www.todayonline.com/singapore/explainer-why-climate-change-should-matter-singaporeans-and-what-government-doing-about-it↩︎\nhttp://www.weather.gov.sg/wp-content/uploads/2022/06/Station_Records.pdf↩︎"
  },
  {
    "objectID": "Station/data/geospatial/MPSZ-2019.html",
    "href": "Station/data/geospatial/MPSZ-2019.html",
    "title": "The Heat is On!",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Station/station.html",
    "href": "Station/station.html",
    "title": "Stations",
    "section": "",
    "text": "#library(devtools)\n#install_github(\"andrew-loh/neaSG\", force = TRUE)\n\n\npacman::p_load(tmap, sf, tidyverse, sfdep, mapview, leaflet.providers, neaSG)\n\n\nstn &lt;- get_weatherstns()\n\n\nglimpse(stn)\n\nRows: 63\nColumns: 5\n$ id                 &lt;chr&gt; \"S77\", \"S109\", \"S117\", \"S64\", \"S90\", \"S114\", \"S50\",…\n$ device_id          &lt;chr&gt; \"S77\", \"S109\", \"S117\", \"S64\", \"S90\", \"S114\", \"S50\",…\n$ name               &lt;chr&gt; \"Alexandra Road\", \"Ang Mo Kio Avenue 5\", \"Banyan Ro…\n$ location.latitude  &lt;dbl&gt; 1.29370, 1.37640, 1.25600, 1.38240, 1.31910, 1.3800…\n$ location.longitude &lt;dbl&gt; 103.8125, 103.8492, 103.6790, 103.7603, 103.8191, 1…\n\n\n\nstn_sf &lt;- st_as_sf(stn, \n                   coords = c(\"location.longitude\", \"location.latitude\"), crs = 4326)\n\n\nglimpse(stn_sf)\n\nRows: 63\nColumns: 4\n$ id        &lt;chr&gt; \"S77\", \"S109\", \"S117\", \"S64\", \"S90\", \"S114\", \"S50\", \"S107\", …\n$ device_id &lt;chr&gt; \"S77\", \"S109\", \"S117\", \"S64\", \"S90\", \"S114\", \"S50\", \"S107\", …\n$ name      &lt;chr&gt; \"Alexandra Road\", \"Ang Mo Kio Avenue 5\", \"Banyan Road\", \"Buk…\n$ geometry  &lt;POINT [°]&gt; POINT (103.8125 1.2937), POINT (103.8492 1.3764), POIN…\n\n\n\ntmap_mode(\"view\")\n\ntm_basemap(\"CartoDB.Positron\") +\n  tm_shape(stn_sf)+\n  tm_dots(col = \"black\", size = 0.1)+\n  tm_view(set.zoom.limits = c(11,12))\n\n\n\n\n\n\n\nstn_selected &lt;- stn_sf %&gt;% \n  filter(id %in% c(\"S60\", \"S117\", \"S116\", \"S115\", \"S113\", \"S111\", \"S107\", \"S201\", \"S50\", \"S43\", \"S44\", \"S221\", \"S24\", \"S121\", \"S109\", \"S114\", \"S900\", \"S209\", \"S104\"))\n         \nglimpse(stn_selected)\n\nRows: 19\nColumns: 4\n$ id        &lt;chr&gt; \"S109\", \"S117\", \"S114\", \"S50\", \"S107\", \"S43\", \"S113\", \"S44\",…\n$ device_id &lt;chr&gt; \"S109\", \"S117\", \"S114\", \"S50\", \"S107\", \"S43\", \"S113\", \"S44\",…\n$ name      &lt;chr&gt; \"Ang Mo Kio Avenue 5\", \"Banyan Road\", \"Choa Chu Kang Avenue …\n$ geometry  &lt;POINT [°]&gt; POINT (103.8492 1.3764), POINT (103.679 1.256), POINT …\n\n\n\ntmap_mode(\"view\")\n\ntm_basemap(\"CartoDB.Positron\") +\n  tm_shape(stn_selected)+\n  tm_dots(col = \"black\", size = 0.1)"
  }
]